:ORG-PROPERTIES:
#+LANGUAGE: gr
#+STARTUP: latexpreview showeverything align fold
#+OPTIONS: tags:t toc:nil
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+EXCLUDE_TAGS: noexport
#+TAGS:  noexport(n)
#+cite_export: basic author author-year
#+INCLUDE: title_page_latex.org
:END:
:LATEX:
\numcommafalse
\clearpage
\tableofcontents
#+TOC: tables
\listoffigures
\textnormal
\clearpage
:END:
* Imports :noexport:
#+begin_src jupyter-python :session python3 :async yes :results drawer
#%%
import numpy as np
import math
import matplotlib.pyplot as plt
from scipy import signal
from tabulate import tabulate
from pros_noisefiltering.filters.fir import fir_factory_constructor
#+end_src

#+RESULTS:
:results:
:end:

#+begin_src jupyter-python :session python3 :async yes :results raw drawer 

#%%
from pathlib import Path
from nptdms import TdmsFile
from pros_noisefiltering.WT_NoiProc import (WT_NoiseChannelProc,
                                            Graph_data_container,
                                            )
from pros_noisefiltering.gen_functions import plot_spect_comb2

#+end_src
#+RESULTS:
:results:
:end:
** Basic folders and data
#+begin_src jupyter-python :session python3 :async yes :results raw drawer 
#%%
FOLDER_FOR_DATA = Path(
    '/mnt/data_folder/measurements_12_05_22/new_record_prop_channel/')
if not FOLDER_FOR_DATA.exists():
    FOLDER_FOR_DATA = Path('D:/_data/WEL/WEL20220512/')

# %% CONSTANTS
FIGSIZE_STD = (6, 6)
# Constant directories and names for the .tdms file structure
# Dir name
TDMS_FNAME = 'Data.tdms'
GROUP_NAME = 'Wind Measurement'
CHAN_NAME = 'Wind2'

# %%
# Dir names for the Compressed air measurment
#
# =================================================
#
# Here the Compressed air measurements are imported
#
# =================================================
#
comp_air_dir = 'compressed air'

# %% preparing tdms files
# New renamed folders for rec version information
data_CA_inv_0_WS_0 = 'ca0_0.1'
data_CA_inv_0_WS_5 = 'ca0_5.1'
data_CA_inv_0_WS_11 = 'ca0_10.1'
data_CA_inv_1_WS_0 = 'ca1_0.1'
data_CA_inv_1_WS_5 = 'ca1_5.1'
data_CA_inv_1_WS_10 = 'ca1_10.1'

path_comp = FOLDER_FOR_DATA / comp_air_dir

# CA stands for compressed air

raw_signal_CA = [data_CA_inv_0_WS_0, data_CA_inv_0_WS_5,
                 data_CA_inv_0_WS_11, data_CA_inv_1_WS_0,
                 data_CA_inv_1_WS_5, data_CA_inv_1_WS_10]

l_tdms_CA = []

for item in raw_signal_CA:
    x = TdmsFile(Path(f'{path_comp}/{item}', TDMS_FNAME))
    l_tdms_CA.append(x)

# %%
# [print(x) for x in l_tdms_CA[0][GROUP_NAME].channels()]
# %%
GROUP_NAME = 'Wind Measurement'
CHAN_NAME = 'Wind2'


df_tdms_0_0 = WT_NoiseChannelProc.from_tdms(
    l_tdms_CA[0][GROUP_NAME][CHAN_NAME],
    desc='Inverter off, WS=0')
df_tdms_0_5 = WT_NoiseChannelProc.from_tdms(
    l_tdms_CA[1][GROUP_NAME][CHAN_NAME],
    desc='Inverter off, WS=5')
df_tdms_0_10 = WT_NoiseChannelProc.from_tdms(
    l_tdms_CA[2][GROUP_NAME][CHAN_NAME],
    desc='Inverter off, WS=11')
df_tdms_1_0 = WT_NoiseChannelProc.from_tdms(
    l_tdms_CA[3][GROUP_NAME][CHAN_NAME],
    desc='Inverter on, WS=0')
df_tdms_1_5 = WT_NoiseChannelProc.from_tdms(
    l_tdms_CA[4][GROUP_NAME][CHAN_NAME],
    desc='Inverter on, WS=5')
df_tdms_1_10 = WT_NoiseChannelProc.from_tdms(
    l_tdms_CA[5][GROUP_NAME][CHAN_NAME],
    desc='Inverter on, WS=10')

#
# =================================================
#
# Here the Inverter measurements are imported
#
# =================================================
#
# %%
inv_meas_dir = 'inverter'
# Inverter measurements of interest
data_inv_inv_0_WS_0 = 'in0_0.1'
data_inv_inv_1_WS_0 = 'in1_0.1'
data_inv_inv_1_WS_5 = 'in1_5.1'
data_inv_inv_1_WS10 = 'in1_10.1'
data_inv_inv_1_WS15 = 'in1_15.1'
data_inv_inv_1_WS_20 = 'in1_20.1'


path_comp = FOLDER_FOR_DATA / inv_meas_dir

# suffixes:
# - CA : compressed air
# - Inv : Inverter
# - DEC : decimation

raw_signal_CA = [data_inv_inv_0_WS_0, data_inv_inv_1_WS_0,
                 data_inv_inv_1_WS_5,
                 data_inv_inv_1_WS10, data_inv_inv_1_WS15,
                 data_inv_inv_1_WS_20]

l_tdms_Inv = []

for item in raw_signal_CA:
    x = TdmsFile(Path(f'{path_comp}/{item}', TDMS_FNAME))
    l_tdms_Inv.append(x)

# %%
# [print(x) for x in l_tdms_Inv[0][GROUP_NAME].channels()]
# %%
dfi_i0_w0 = WT_NoiseChannelProc.from_tdms(
    l_tdms_Inv[0][GROUP_NAME][CHAN_NAME],
    desc='Inverter Off, WS=0, 100kHz')
dfi_i1_w0 = WT_NoiseChannelProc.from_tdms(
    l_tdms_Inv[1][GROUP_NAME][CHAN_NAME],
    desc='Inverter On, WS=0, 100kHz')
dfi_i1_w5 = WT_NoiseChannelProc.from_tdms(
    l_tdms_Inv[2][GROUP_NAME][CHAN_NAME],
    desc='Inverter On, WS=5, 100kHz')
dfi_i1_w10 = WT_NoiseChannelProc.from_tdms(
    l_tdms_Inv[3][GROUP_NAME][CHAN_NAME],
    desc='Inverter On, WS=10, 100kHz')
dfi_i1_w15 = WT_NoiseChannelProc.from_tdms(
    l_tdms_Inv[4][GROUP_NAME][CHAN_NAME],
    desc='Inverter On, WS=15, 100kHz')
dfi_i1_w20 = WT_NoiseChannelProc.from_tdms(
    l_tdms_Inv[5][GROUP_NAME][CHAN_NAME],
    desc='Inverter On, WS=20, 100kHz')

#+end_src

#+RESULTS:
:results:
:end:
* Εισαγωγή
#+ODT: <text:p text:style-name="PageBreak"/>
Σε πολλές περιπτώσεις η ανάγκη της επεξεργασίας σημάτων, όπως στις
τηλεπικοινωνίες μετά ή/και πριν την μετάδοση από τον πομπό προς τον
δέκτη, και η εκλογή πληροφοριών από αυτό, έθεσαν από νωρίς το πρόβλημα
των παρεμβολών του περιβάλλοντος στις ηλεκτρονικές συσκευές και την
ανάγκη απομόνωσης του φάσματος των συχνοτήτων που χρησιμοποιούνται για
κάθε λειτουργία.

Η απομόνωση αυτή μπορεί να επιτευχθεί είτε μέσω συμβατικών φίλτρων,
δηλαδή αντιστάσεις και πυκνωτές κατάλληλα τοποθετημένα στο κύκλωμα που
συλλέγει την τάση (*ρεύμα μέτρησης*), είτε με την χρήση μεθόδων ψηφιακής
επεξεργασίας σημάτων \(\selectlanguage{english}\text{(DSP)}\selectlanguage{greek}\).
Στις μέρες μας προτιμάται ο 2ος τρόπος λόγω
της ραγδαίας εξέλιξης των Η/Υ, με αποτέλεσμα να επιφέρει μεγαλύτερο
κόστος η εγκατάσταση αναλογικών φίλτρων σε κάθε θέση που απαιτείται.

Οι μέθοδοι αλλά και η πληθώρα συστημάτων λήψης και ανάλυσης σημάτων τις
τελευταίες δεκαετίες έχουν, αφενός εξελιχθεί ως προς την υπολογιστική
ισχύ με ταχύτερους επεξεργαστές και αλγόριθμους, αφετέρου δίνουν
πλέον την δυνατότητα διαχείρισης των πληροφοριών απομακρυσμένα με
αποτέλεσμα την ευρύτερη εγκαθίδρυση των ψηφιακών μέσων επεξεργασίας
σημάτων. Στις μέρες μας η ανάγκη διαχείρισης ολοένα και μεγαλύτερων
αρχείων δεδομένων με καλύτερη ακρίβεια οδήγησε την επιστημονική κοινότητα
στην χρήση της μεθόδου *μετα-επεξεργασίας* \(\selectlanguage{english}\text{(post-processing)}\selectlanguage{greek}\). Βασικό όφελος
ήταν η δυνατότητα επαναληψιμότητας του πειράματος και σύγκρισης των
αποτελεσμάτων σε όλο τον κόσμο, ουσιαστική αρχή της πειραματικής
διαδικασίας. Έτσι με την χρήση προγραμματισμού δίνεται πλέον η
δυνατότητα στον ερευνητή, να δημιουργεί ένα περιβάλλον προσομοίωσης και
να δοκιμάζει διάφορες λύσεις χωρίς να επισκεφτεί την πειραματική διάταξη
σε πολλές περιπτώσεις μετά την καταγραφή των μετρήσεων.

Αξίζει εδώ να σχολιαστεί ότι τα πρότυπα φίλτρα που εφαρμόστηκαν, τυποποιήθηκαν
από το λογισμικό υπολογισμών και προγραμματισμού \(\selectlanguage{english}\text{Matlab}\selectlanguage{greek}\) και στην συνέχεια
πολλές γλώσσες προγραμματισμού τα συμπεριέλαβαν σε βιβλιοθήκες για επεξεργασία
σημάτων. Η \(\selectlanguage{english}\text{python}\selectlanguage{greek}\) θεωρείται από τις γλώσσες με τις αναλυτικότερες βιβλιοθήκες
για την κατασκευή φίλτρων, λόγω των πολλών επιλογών σε τύπους αλλά ειδικά στην
πλειθώρα χαρακτηριστικών που μπορεί ο χρήστης να καθορίσει για τη συμπεριφορά
και απόκριση των φίλτρων.

Στην παρούσα εργασία θα πραγματευτούμε την απομείωση συγκεκριμένων
συχνοτήτων με την χρήση Ψηφιακής Ανάλυσης Σημάτων και φίλτρων, διαφόρων
κατηγοριών. Στο πλαίσιο αυτό θα παρουσιαστεί, μια μελέτη που
πραγματοποιήθηκε σε συνεργασία με το εργαστήριο Αιολικής Ενέργειας του
τμήματος Μηχανολόγων Μηχανικών στο Ελληνικό Μεσογειακό Πανεπιστήμιο με
θέμα την απόρριψη θορύβου από αισθητήριο όργανο για την μέτρηση της
ταχύτητας ανέμου σε περιβάλλον με ενισχυμένες παρεμβολές. Η
_ιδιαιτερότητα_ που παρουσιάστηκε στην εγκατάσταση ήταν παρεμβολές από
ηλεκτρικό μετασχηματιστή, που όμως ήταν αδύνατο να
αφαιρεθεί, και ταυτόχρονα ο σχεδιασμός όπως και η τοποθέτηση ενός
αναλογικού φίλτρου θα ενέτασσαν μεγάλο κόστος και περιπλοκότητα. Θα
αναλυθούν οι δομές σημάτων που επεξεργάστηκαν καθώς και οι τύποι των
φίλτρων που χρησίμευσαν στην απομόνωση των ζητούμενων φασμάτων συχνοτήτων.
Επίσης θα υπάρξει παράθεση των θετικών και αρνητικών που παρατηρήθηκαν κατά την
διάρκεια εκτέλεσης της επεξεργασίας και καταγραφής των δεδομένων.
-----
** Ιστορική αναδρομή
:PROPERTIES:
:ATTR_ODT: :page-break t
:END:
Από την εποχή της ανακάλυψης του Απειροστικού λογισμού \(\selectlanguage{english}\text{(calculus)}\selectlanguage{greek}\)
τον 17ο αιώνα, οι επιστήμονες προσπαθούν να εξηγήσουν τα φυσικά
φαινόμενα με μαθηματικά μοντέλα χρησιμοποιώντας εξισώσεις
συνεχών μεταβλητών και διαφορικές εξισώσεις. Χρησιμοποιήθηκαν
τεχνικές αριθμητικής επίλυσης όταν οι αναλυτικές λύσεις δεν
ήταν εφικτό να καθοριστούν. Αργότερα μαθηματικοί του 18ου αιώνα
όπως οι Ευλερ, Μπερνούλι και Λαγκραντζ κατασκεύασαν μεθόδους
για αριθμητική ολοκλήρωση και την εισαγωγή εξισώσεων συνεχών
μεταβλητών. Μια ιστορική μελέτη από τους _ref  \(Heideman,\ Johnson\)__ και
${Burrus}$ (1984) έδειξε ότι ο ${Gauss}$ είχε ανακαλύψει την βασική
αρχή του γρήγορου μετασχηματισμού ${Fourier}$ ήδη από το 1805, πριν
την δημοσίευση της διατριβής του πάνω στην απεικόνιση
αρμονικών σειρών εξισώσεων.
Στις αρχές του 1950, η ανάλυση σημάτων γινόταν κυρίως με
αναλογικά συστήματα κατασκευασμένα από ηλεκτρονικά κυκλώματα
ακόμα και με μηχανικές συσκευές. Ενώ οι Η/Υ είχαν κάνει την
είσοδό τους ήδη σε επιχειρήσεις και επιστημονικά εργαστήρια
ήταν ακόμα ακριβοί με περιορισμένες δυνατότητες. Περίπου εκείνη
την εποχή ξεκίνησε η ανάγκη για πιο εξειδικευμένες μεθόδους
στην ανάλυση σημάτων και στράφηκε η προσοχή στην ανάλυση
διακριτού χρόνου σημάτων. Μια από τις πρώτες εφαρμογές των Η/Υ
ήταν η καταγραφή σεισμικών δονήσεων σε πλατφόρμες εξόρυξης
πετρελαίου, που καταγράφονταν σε μαγνητική ταινία για να επεξεργαστούν
αργότερα. Η διαδικασία αυτή δεν μπορούσε να γίνει σε
πραγματικό χρόνο, καθώς μπορεί να χρειαζόντουσαν κάποια
λεπτά ακόμα και ώρες για την επεξεργασία μερικών δευτερολέπτων
από τις μαγνητικές ταινίες.
    Την ίδια εποχή για όσους είχαν την δυνατότητα να χρησιμοποιήσουν
ψηφιακούς υπολογιστές, ήταν εύκολο να δημιουργήσουν ένα περιβάλλον
προσομοίωσης για να μελετήσουν νέους αλγόριθμους και μεθόδους
ανάλυσης σημάτων πριν χρησιμοποιήσουν πόρους και μηχανικούς για την
κατασκευή της αναλογικής συσκευής που τελικά θα εκτελούσε την
επιθυμητή εργασία. Παραδείγματα τέτοιων προσομοιώσεων ήταν εκείνες
που πραγματοποιήθηκαν στο Εργαστήριο Λίνκολν και στα Εργαστήρια Μπελλ
όπου προσομοιώθηκε ένας κωδικοποιητής φωνής ${vocoder}$ \selectlanguage{english}
[cite:@vocoded67] \selectlanguage{greek}.
Στην κατασκευή ενός αναλογικού καναλιού κωδικοποιητής φωνής, τα χαρακτηριστικά του
φίλτρου επηρεάζουν την ποιότητα της φωνής σε βαθμό που ήταν δύσκολο να
διακριθούν αντικειμενικά. Μέσω προγραμματισμένων προσομοιώσεων
κατάφεραν την ρύθμιση των χαρακτηριστικών, ώστε να καθορίσουν το
αποτέλεσμα της αναλογικής συσκευής πριν την κατασκευή της.
    Εδώ αξίζει να σημειωθεί ότι ενώ η χρήση των Η/Υ βοήθησε στην πειραματική
διαδικασία, μπορούσε μόνο να /προσομοιώσει ή προσεγγίσει/ το αναλογικό
σύστημα ανάλυσης σημάτων.

Καθώς τα σήματα ξεκίνησαν να επεξεργάζονται σε ψηφιακούς υπολογιστές, οι
ερευνητές αναγκάστηκαν πολύ γρήγορα να χρησιμοποιούν ολοένα και πιο περίπλοκους
αλγόριθμους επεξεργασίας σημάτων. Πολλοί από τους αλγόριθμους
εξελίχθηκαν λόγω της ευελιξίας που παρείχε το προγραμματιστικό περιβάλλον
σε αντίθεση με την μόνιμη αναλογική κατασκευή, όπου περιορίζεται η δυνατότητα
πειραματισμού. Έτσι η συνεχής εξέλιξη και ευελιξία της ψηφιακής
επεξεργασίας σημάτων έδωσε το έναυσμα για την ολική ψηφιοποίηση των συσκευών
και μεθόδων της επεξεργασίας και διάδοσης σημάτων στην πλειοψηφία των
εγκαταστάσεων. Εκείνη την περίοδο ξεκίνησε ενεργά η δημιουργία ψηφιακών
κωδικοποιητών φωνής, ψηφιακών αναλυτών φάσματος κ.α. συσκευών αμιγώς ψηφιακής
επεξεργασίας σήματος, με την ελπίδα ότι τελικά τέτοια συστήματα θα
αποκτούσαν πρακτικές εφαρμογές.

Μία νέα σκοπιά προς την επεξεργασία σημάτων διακριτού χρόνου επιταχύνθηκε
με την δημοσίευση από τους ${Cooley\ and\ Tukey}$ (1965) ενός αποδοτικού αλγόριθμου
για τον υπολογισμό του μετασχηματισμού ${Fourier}$. Η κλάση αυτή θα γίνει
αργότερα γνωστή ως Ταχύς Μετασχηματισμός ${Fourier\ (F.F.T.\ Fast\ Fourier\ Transform)}$.
Ο $\en{F.F.T.}$ ήταν αρκετά σημαντικός για πολλούς λόγους. Βασικό
πρόβλημα των αλγόριθμων της εποχής ήταν ότι απαιτούσαν χρόνους
επεξεργασίας πολύ μεγαλύτερους από τον πραγματικό χρόνο του
καταγεγραμμένου σήματος. Αυτό συνέβαινε γιατί στις περισσότερες
περιπτώσεις απαιτείται η χρήση ανάλυσης φάσματος του σήματος και μέχρι
τότε δεν υπήρχε κάποιος αποδοτικός αλγόριθμος. Ο ταχύς μετασχηματισμός
προσέφερε την δυνατότητα στους ερευνητές να πειραματίζονται σε
πραγματικούς χρόνους με την εγκατάσταση, καθώς μείωσε δραστικά τον χρόνο
επεξεργασίας κατά πολλές τάξεις μεγέθους. Επιπρόσθετα πολλοί αλγόριθμοι
που δεν είχαν καμία πρακτική εφαρμογή, λόγω του χρόνου επεξεργασίας,
ξεκίνησαν να έχουν πρακτικές εφαρμογές στην βιομηχανία και αργότερα στα
προϊόντα για τον γενικό πληθυσμό.

Άλλη μια σημαντική ιδιότητα του ${F.F.T.}$ που βοήθησε στον σχεδιασμό καλύτερων
συσκευών ήταν ότι προγραμματίστηκε με βάση τα σήματα διακριτού χρόνου.
Δηλαδή εμπεριείχε τις απαιτούμενες ιδιότητες και μαθηματικά ώστε να
διαχειρίζεται ψηφιοποιημένα σήματα -διακριτού χρόνου- και να μην
/προσομοιώνει/ μια αναλογική συμπεριφορά ενός σήματος ή συστήματος.
Έτσι η δυνατότητα σχεδιασμού συστημάτων που προβλεπόταν η ακριβής
συμπεριφορά του βοήθησε στην εξέλιξη της επεξεργασίας σημάτων
διακριτού χρόνου χωρίς την ανάγκη συσχέτισης των αποτελεσμάτων
με ένα σύστημα συνεχούς χρόνου (αναλογικού συστήματος). Έτσι η ένταξη
των διακριτών σημάτων ως ξεχωριστή μέθοδος επεξεργασίας προσέφερε στην
ανάπτυξη τεχνολογίας μειώνοντας, εκτός από τους απαιτούμενους χρόνους,
το κόστος και τον όγκο των εγκαταστάσεων για την επίτευξη του στόχου.

Παράλληλα η επινόηση και εφεύρεση των μικρο-ελεγκτών στον τομέα της
μικροηλεκτρονικής επέφερε περαιτέρω μείωση του κόστους. Ενώ οι
πρώτες συσκευές μικρο-ελεγκτών δεν παρείχαν τις απαιτούμενες δυνατότητες
για την ολοκλήρωση των συστημάτων επεξεργασίας διακριτών σημάτων, από
τις αρχές της δεκαετίας του '80 η ταχύτητα τους αυξάνεται εκθετικά.
Επιπρόσθετα η αρχιτεκτονική και τεχνολογία των ολοκληρωμένων κυκλωμάτων
(${I.C.\ Intergated\ Circuit}$) αναπτύχθηκε προς την κατεύθυνση για την κατασκευή
ολοένα και ταχύτερων υπολογιστών για την διαχείριση ακέραιων και δεκαδικών
αριθμών. Έτσι σήμερα η ανάλυση σημάτων, η καταγραφή όπως και η μετάδοσή τους
γίνεται πολλές φορές εξ' ολοκλήρου από ψηφιακά συστήματα.
-----
* Θεωρητικό υπόβαθρο
** Τι είναι σήμα?
Ο όρος σήμα ${\selectlanguage{english}\text{(signal)}\selectlanguage{greek}}$ δίνεται σε κάτι που εμπεριέχει πληροφορία. Γενικά
τα σήματα χρησιμοποιούνται στην κωδικοποίηση και εξαγωγή πληροφοριών για
την κατάσταση ή/και την συμπεριφορά ενός φυσικού συστήματος. Συχνά
συνδυάζοντας διαφορετικά σήματα υπάρχει η δυνατότητα επικοινωνίας μεταξύ
ανθρώπων αλλά και με μηχανήματα. Άν και αναπαριστούμε τα σήματα με διάφορες
μορφές, η πληροφορία που μεταδίδουν, εμπεριέχεται με την μορφή μοτίβων. Η
μαθηματική αναπαράσταση παρέχεται μέσω συνάρτησης μίας ή περισσότερων
ανεξάρτητων μεταβλητών. Ένα παράδειγμα είναι η ανεξάρτητη μεταβλητή της
εξίσωσης που περιγράφει μία ψηφιακή εικόνα, όπου θα αποτελείται από δύο
χωρικές μεταβλητές σε συνάρτηση της φωτεινότητας. Αντίθετα ένα αρχείο ήχου
θα ορίζεται σε συνάρτηση με τον χρόνο. Εδώ καταχρηστικά όταν θα αναφερόμαστε
σε κάποιο σήμα θα χρησιμοποιούμε την 2η περίπτωση, δηλαδή ως προς τον χρόνο.

Η ανεξάρτητη μεταβλητή του χρόνου σε ένα σήμα μπορεί να είναι συνεχής ή
διακριτή ως προς το διάστημα που ορίζεται. Τα σήματα συνεχούς χρόνου
ορίζονται για κάθε τιμή τους στο διάστημα και επομένως αναπαριστώνται
με μία ανεξάρτητη συνεχή μεταβλητή. Στην παραπάνω περίπτωση αναφερόμαστε
σε αυτά ως *αναλογικά σήματα*. Ως *σήματα διακριτού χρόνου* ονομάζουμε όσα η
ανεξάρτητη μεταβλητή του χρόνου, μας παρέχει πληροφορία για συγκεκριμένα
διαστήματα ή αλλιώς χρονικές στιγμές. Εδώ η αναπαράσταση του χρόνου γίνεται
με την χρήση ακολουθίας αριθμών, συνήθως ανά συγκεκριμένο διάστημα π.χ.
κάθε 0,1 δευτερόλεπτα. Εκτός του χρόνου, την ίδια κατηγοριοποίηση συναντούμε
και στην αναπαράσταση της ισχύος ενός σήματος \((amplitude)\). *Ψηφιακά σήματα*
ονομάζονται όσα έχουν διακριτές τιμές ισχύος *και* χρόνου.

Τα συστήματα ανάλυσης σημάτων κατηγοριοποιούνται ανάλογα. Συστήματα συνεχούς
χρόνου ονομάζονται εκείνα που τα σήματα εισόδου και εξόδου είναι αναλογικά.
Αντίστοιχα συστήματα διακριτού χρόνου ονομάζονται όσα διαχειρίζονται σήματα
διακριτού χρόνου. Ψηφιακά συστήματα ονομάζονται όσα, σε είσοδο και έξοδο
διαχειρίζονται ψηφιακά σήματα. Επομένως στην ψηφιακή ανάλυση σημάτων
${(Digital\ signal\ processing)}$ επεξεργάζονται σήματα που περιγράφονται με
ακολουθίες για τον χρόνο και την ισχύ τους.

Σήματα διακριτού χρόνου προκύπτουν καταγράφοντας ένα συνεχές σήμα ή από
διεργασίες που εκτελούνται σε διακριτές τιμές του χρόνου. Ανεξαρτήτου
προέλευσης του σήματος, τα συστήματα επεξεργασίας διακριτού χρόνου
παρέχουν πολλές δυνατότητες ελκύοντας το ενδιαφέρον τις τελευταίες
δεκαετίες. Δυνατότητες προσομοίωσης αναλογικών συστημάτων με
περισσότερη ευελιξία και ανακάλυψης τυχών μεταβολών
στα σήματα, που δεν είναι δυνατόν να γίνουν αντιληπτά από ένα αναλογικό
σύστημα επεξεργασίας, είναι ανάμεσα στα πολλά πλεονεκτήματα. Επιπρόσθετα η
συνεχής ανάπτυξη ψηφιακών συσκευών, όπως είναι οι υπολογιστές γενικής χρήσης
και οι μικρο-ελεγκτές, απαιτεί την αναπαράσταση των σημάτων σε διακριτά
πεδία χρόνου αν όχι σε ψηφιακή μορφή.

Παρακάτω στο κεφάλαιο θα αναφερθούμε σε βασικές έννοιες που διέπουν τα σήματα
διακριτού χρόνου και τα συστήματα ανάλυσης αυτών, για *μονοδιάστατα σήματα*.
Πρακτικά υπάρχει η δυνατότητα να τα διαχειριστούμε ως αναλογικά
και με σωστή χρήση συγκεκριμένων κριτηρίων, να εξάγουμε σωστά αποτελέσματα.
Τέτοιου τύπου συστήματα καθόρισαν τις βασικές αρχές των καταγραφικών
συσκευών δεδομένων. Όμως πολλά συστήματα διακριτού χρόνου
δεν ορίζονται ως προσομοιώσεις αναλογικών συστημάτων καθώς και πολλές
ακολουθίες δεν προκύπτουν καταγράφοντας ένα αναλογικό σήμα. Για τους
παραπάνω λόγους αντί να εφαρμοστούν τα αποτελέσματα από την θεωρία που
αναφέρεται σε συνεχή σήματα-συστήματα, θα εκβάλλονται παράλληλα συμπεράσματα
ξεκινώντας από τα χαρακτηριστικά που διέπουν το σήμα και θέτοντας το
ανάλογο πλαίσιο επεξεργασίας. Εδώ ασχοληθήκαμε μόνο με ψηφιακά σήματα
καθώς η καταγραφή των σημάτων έγινε με Η/Υ μέσω προγράμματος ${(Lab-View)}$.

*** Σήματα συνεχούς χρόνου
Στην εισαγωγή αναφερθήκαμε στον γενικό ορισμό των σημάτων και τις διαφορές
που τα κατηγοριοποιούν σε αρχικό βαθμό. Επειδή ο στόχος της παρούσας εργασίας
ήταν η απόρριψη θορύβου δεν θα γίνει η πρέπουσα ανάλυση στην θεωρία των σημάτων,
αντιθέτως θα παρατεθούν οι βασικές αρχές και έννοιες ώστε να υπάρχει το υπόβαθρο
για τα επόμενα κεφάλαια.

Σήμα συνεχούς χρόνου ορίζουμε ως την εξίσωση που
περιγράφει την εξέλιξη μιας περιοδικής κυματομορφής στο χρόνο. Πιο συγκεκριμένα
αν υποθέσουμε πως ο χρόνος διάρκειας του σήματος είναι \(t\), τότε η κυματομορφή στο
πεδίο του χρόνου θα εκφράζεται ως συνάρτηση αυτού \(s(t)\).
Μπορεί λοιπόν να παρασταθεί από μία ανεξάρτητη μεταβλητή και ορίζεται για κάθε
τιμή της. Συνήθως τα συναντούμε στην μορφή συνεχούς ρεύματος σε μετρητικές
και άλλες συσκευές

Με παρόμοιο τρόπο ορίζονται και τα διακριτά σήματα συνεχούς χρόνου.
Η διαφορά είναι πως αντί να μπορούμε να ταυτίσουμε κάθε χρονική στιγμή με το
αντίστοιχο \(s(t)\), μπορούμε να ορίσουμε την εξίσωση της κυματομορφής για
περιορισμένο ή αλλιώς διακριτό πεδίο τιμών.

Αναλογικά σήματα ονομάζονται εκείνα που η ανεξάρτητη μεταβλητή του
χρόνου \(t\) και η μεταβλητή του πλάτους (εξαρτημένη μεταβλητή ως προς τον
χρόνο) λαμβάνουν συνεχής και πραγματικές τιμές, π.χ. \(s(t) = 12 * t\).
Διακριτά σήματα συνεχούς χρόνου ονομάζονται όσα ή εξαρτημένη τιμή
(πλάτος) παίρνει διακριτές τιμές, π.χ.
\begin{equation}
\begin{align}
s(t) =  A * t \\
A &= [0, … ,n],\ t \in [a,b] n \in \mathbb{Z} \\
\end{align}
\end{equation}

Στην πληθώρα των συσκευών επεξεργασίας και καταγραφής η χρήση
των αναλογικών σημάτων έχει σχεδόν εκλείψει. Σημαντικό μειονέκτημα
ανάμεσα σε άλλα είναι και ο υπέρογκος χώρος που απαιτείται
για την αποθήκευση του. Παρακάτω θα αναφερθούμε στα *ψηφιακά* σήματα που
έλυσαν πολλά από τα προβλήματα των αναλογικών σημάτων, προσθέτοντας μια
σειρά από “πονοκεφάλους” αρχικά στην επιστημονική κοινότητα. Τα
πλεονεκτήματα ήταν πολλά και τελικά επικράτησαν. Παρακάτω θα παρατεθούν
κάποιες βασικές έννοιες και αρχές που τα διέπουν.
*** Σήματα διακριτού χρόνου
Σήμα διακριτού χρόνου ονομάζεται μια ακολουθία αριθμών καταγεγραμμένες
ανά συγκεκριμένο χρονικό διάστημα, π.χ. κάθε 0.01 δευτερόλεπτο. Το
διάστημα αυτό ορίζει την ταχύτητα καταγραφής του σήματος από την
εκάστοτε συσκευή, όμως εμείς αναφερόμαστε σε αυτό το χρόνο μέσω της
συχνότητας καταγραφής ή αλλιώς ${sampling\ frequency}$. Η συχνότητα αυτή
ορίζεται ως το πηλίκο ενός δευτερολέπτου ως προς το χρονικό διάστημα
καταγραφής, δηλαδή από το παραπάνω παράδειγμα θα είχαμε μια συχνότητα
καταγραφής σε \([Hz]\) :
\begin{equation}
fs = \frac{1}{0.01} [Hz]
\end{equation}
Σημαντικό είναι να αναφερθεί ότι υπάρχει ένα όριο το οποίο πρέπει να
τηρείται ώστε η επαναδημιουργία του σήματος να απεικονίζει όσο το
δυνατόν πιο πολύ στο συνεχές σήμα που καταγράφηκε στην αρχή. Θα
αναφερθούμε αργότερα στο εν λόγω θεώρημα του φυσικού ${Niquist}$.
*** Μοναδιαίο διακριτό σήμα
Μοναδιαίο ονομάζεται το σήμα που αποτελείται από έναν κρουστικού
χαρακτήρα παλμό και έχει μηδενική ισχύ πριν και μετά την εμφάνισή
του. Αν υποθέσουμε μια συνάρτηση \(y(t)\) ,
\begin{equation}
\begin{align}
y(t) = [..., 0, 1, 0, ...]
\end{align}
\end{equation}
θα είναι η έξοδός του.

Μια άλλη βασική υποκατηγορία αποτελεί η μοναδιαία ακολουθία βήματος.
Εδώ σε αντίθεση με παραπάνω, η τιμή της εξόδου αλλάζει από μηδέν σε ένα
μόλις η εξαρτημένη μεταβλητή \(t\) λάβει κάποια οριακή τιμή.
Χρησιμοποιώντας το ανωτέρω παράδειγμα θα έχουμε ότι:
\begin{equation}
\begin{align}
y(t) = [..., 0, 1, 1, 1, ...]
\end{align}
\end{equation}
*** Τυχαίο σήμα
Τα τυχαία σήματα αποτελούν μία ειδική υποκατηγορία που χρησιμοποιείται
ευρέως στην ανάλυση ψηφιακών σημάτων. Αναπτύχθηκαν για να καλύψουν την
ανάγκη επιβεβαίωσης των συσκευών επεξεργασίας κυματομορφών. Με την
πάροδο του χρόνου τις συναντάμε σε διάφορες συσκευές τηλεπικοινωνίας
και σχεδόν σε όλες τις συσκευές παραγωγής ήχου (\(synthesizers\)).
Αξίζει να σημειωθεί για λόγους πληρότητας ότι τα εν' λόγω σήματα
βασίζονται σε μοντέλα που απορρέουν από στατιστικές κατανομές.
Ο “λευκός” γκαουσιανός θόρυβος (\(white\ gaussian\ noise)\) ακολουθεί
την λεγόμενη κανονική κατανομή πιθανοτήτων του \(Gauss\). Στην παρούσα
εργασία ένα αντίστοιχο σήμα χρησιμοποιήθηκε για την επιβεβαίωση των
φίλτρων πριν την εφαρμογή στο σετ δεδομένων. Δεν θα γίνει περαιτέρω
ανάλυση γιατί κρίθηκε πως οι παρεμβολές στον αισθητήρα της εγκατάστασης
προερχόταν από εξωτερικά Η/Μ πεδία και όχι από τυχαίο θόρυβο. Τα καλώδια
που χρησιμοποιήθηκαν για την καταγραφή έχουν την δυνατότητα απόρριψης
παρόμοιου τύπου θόρυβο.
*** Διακριτά σήματα και ακολουθίες
Για τον ορισμό του διακριτού σήματος αρκεί να υποθέσουμε μια μαθηματική
ακολουθία αριθμών \(x\), όπου το νιοστό στοιχείο της θα γραφόταν ως \(x[n]\).
Ορθότερα μπορούμε να γράψουμε την εξής έκφραση:
\begin{equation}
\begin{align}
n \in \mathbb{Z} \\
x &= {x[n]},\  -\infty < n < \infty \\
\end{align}
\end{equation}
όπου \(\mathbb{Z}\) είναι σαφώς το σύνολο των ακέραιων αριθμών και \(x[n]\) το κάθε στοιχείο
της ακολουθίας. Ο συγκεκριμένος τύπος σήματος παράγεται συνήθως από την
καταγραφή αναλογικού σήματος. Επομένως η παραπάνω σχέση μετασχηματίζεται
για αναλογικό σήμα της μορφής \(x_{a}(t)\), για χρονική στιγμή ίση με \(nT\), το
νιοστό στοιχείο της ακολουθίας εξόδου από την καταγραφή θα είναι της
μορφής:
\begin{equation}
\begin{align}
x[n] = x_{a} nT,\ -\infty < n < \infty \\
\end{align}
\end{equation}

Η ποσότητα \(T\) ορίζει την περίοδο καταγραφής που παρέχει την συχνότητα
καταγραφής διαιρώντας με την μονάδα. Αν και τα διακριτά σήματα δεν
προέρχονται πάντα από καταγραφή αναλογικών σημάτων ο ορισμός του αριθμού
των στοιχείων της ακολουθίας \(n\) μπορεί να λάβει μόνο ακέραιες τιμές. Επίσης
γράφοντας μόνο το “τελευταίο” ψηφίο μέσα στην αγκύλη αναφερόμαστε σε όλα
τα στοιχεία της ακολουθίας για συντομία και όχι στο τελευταίο στοιχείο
αυτής.
*** Διαχείριση και βασικές τεχνικές μετασχηματισμών
Κατά την διαδικασία της ανάλυσης σημάτων είναι συχνά απαραίτητη η επέμβαση
στο σήμα εισόδου ή εξόδου. Οι πράξεις του πολλαπλασιασμού και της πρόσθεσης
δυο σημάτων μεταξύ τους λαμβάνει χώρα στοιχείο προς στοιχείο, όπως πράξεις
μεταξύ αριθμού και ακολουθίας. Επίσης όταν αφαιρείται από μια ακολουθία
ακέραιος αριθμός το παράγωγο σήμα ονομάζεται καθυστέρηση του αρχικού
(\(delayed\)). Μια τέτοια ακολουθία μπορεί να βρεθεί γραμμένη ως εξής:

\begin{equation}
\begin{align}
a_{0} \in \mathbb{Z} \\
&out[z] = in[z-a_{0}] \\
\end{align}
\end{equation}

Τέτοιου είδους μετασχηματισμοί εφαρμόζονται σε συνδυασμούς και παρέχουν μία
πληθώρα διεργασιών ανάμεσα σε σήματα αλλά και σε σχέση με κάποια σταθερά.
Μια ειδική περίπτωση που αναφέρθηκε νωρίτερα, ως βηματική μοναδιαία
ακολουθία, εκφράζεται σαν άθροισμα καθυστερημένων ακολουθιών:

\begin{equation}
\begin{align}
out[n] = \sum_{k=0}^{\infty} in[n-k]
\end{align}
\end{equation}
Η παραπάνω σχέση προκύπτει γιατί όλα τα μή μηδενικά στοιχεία της ακολουθίας
\(in[n]\) ισούνται με την μονάδα. Σημαντική θέση στην ανάλυση διακριτών συστημάτων
έχει και η εκθετική ακολουθία. Συχνά απλοποιεί τις πράξεις ειδικά για
συστήματα πέραν του ενός βαθμού ελευθερίας. Η γενική μορφή της εκθετικής
ακολουθίας φαίνεται παρακάτω:
\begin{equation}
\begin{align}
s[n] = Cb^{n}
\end{align}
\end{equation}
όπου \(C\) και \(b\) σταθερές που λαμβάνοντας πραγματικές τιμές
μετατρέπουν την έκφραση σε ακολουθία με πεδίο ορισμού το \(\mathbb{R}\).
Συνοπτικά οι εκθετικές μορφές σε συνδυασμό με ανάλογες τριγωνομετρικές
μορφές μπορούν να παρέχουν πληροφορία για την ταχύτητα διάδοσης ενός
σήματος, την μορφολογία της κυματομορφής αλλά και την ισχύ των συχνοτήτων
που μας ενδιαφέρουν. Η ισχύ στο παράδειγμά μας θα ήταν \(C\).
*** Συνδυάζοντας ακολουθίες
Ίσως από τις πιο συχνά αναλυμένες μορφές σημάτων αποτελούν τα ημιτονοειδή
και συνημιτονοειδή. Η γενική μορφή ορίζεται όπως θα δειχθεί παρακάτω και
θα αναφερθούμε στην σχέση που αναδύεται από τα μαθηματικά, της εκθετικής
με την ημιτονοειδή μορφή.
\begin{equation}
\begin{align}
&y[n] = C \cos(\omega_{0}n + \phi) \\
\end{align}
\end{equation}
Ας υποθέσουμε την ανωτέρω απόκριση, η οποία ορίζεται για κάθε \(n\),
με τις τιμές των \(C\) και \(\phi\) να λαμβάνουν πραγματικές τιμές. Η εκθετική μορφή
μιας ακολουθίας μπορεί να γραφεί και ως \(C \cdod c^{n}\) με την μεταβλητή \(n\) να έχει
φανταστικές τιμές. Θα μπορούσαμε να γράψουμε την παραπάνω έκφραση
στην μορφή:
\begin{equation}
\begin{align}
y[n] = |C||c|^{n} \cdot(\cos(\omega_{0}n+\phi)+ j\sin(\omega_{0}n+\phi)) \\
\end{align}
\end{equation}
Η παραπάνω εξίσωση ταλαντεύεται με εκθετικά αυξανόμενη κλήση αν η απόλυτη
τιμή της μεταβλητής \(c\) είναι μεγαλύτερη της μονάδας και με εκθετικά
μειούμενη στην αντίθετη περίπτωση όπου \(|c|<1\).

Στην περίπτωση που η μεταβλητή λάβει την τιμή 1, η σχέση χαρακτηρίζεται
ως φανταστική εκθετική ακολουθία και ικανοποιεί την παρακάτω συνθήκη.
\begin{equation}
\begin{align}
y[n] &= |C| e^{j(\omega_{0}n+\phi)} \\
&= |C|\cdot(\cos(\omega_{0}n+\phi)+ j\sin(\omega_{0}n+\phi)) \\
\end{align}
\end{equation}
Εδώ όπως και σε συνεχή συστήματα μπορούμε να χαρακτηρίσουμε την μεταβλητή
\(\phi\) ως την φάση του σήματος και αντίστοιχα \(\omega_{0}\) ονομάζεται κυκλική συχνότητα.
Παρατηρούμε πως η μεταβλητή \(n\) είναι αδιάστατο μέγεθος και επομένως η κυκλική
συχνότητα θα πρέπει να ορίζεται σε ακτίνια (\(rad\)). Αν απαιτείται περαιτέρω
ορισμός από τις ανάγκες της επεξεργασίας, υπάρχει δυνατότητα να ορίσουμε την
κυκλική συχνότητα σε ακτίνια ανά δείγμα \( \displaystyle \frac{rad}{sample}\) και ως \(n\) τον αριθμό των
δειγμάτων από την καταγραφή του σήματος. Όπως επισημαίνεται στη
βιβλιογραφία εδώ φαίνεται και η πρώτη διαφορά μεταξύ των συνεχών και
διακριτών συστημάτων.

Αν υποθέσουμε ότι η φάση του σήματος ισούται με 2π, τότε η εκθετική μορφή
αποκτά ψευδώνυμα συχνοτήτων που είναι μη διακριτά μεταξύ τους. Ένα απλό
παράδειγμα για την ημιτονοειδή μορφή φαίνεται παρακάτω:
\begin{equation}
\begin{align}
y[n]&&=C \cos[(\omega_{0} + 2\pi r)n + \phi] \\
&&=C \cos(\omega_{0}n + \phi) \\
\end{align}
\end{equation}
Οι εφαρμογές της ιδιότητας των διακριτών σημάτων να δημιουργούν αυτά τα
ψευδώνυμα ποικίλουν και θα αναφερθούν σε ένα πρώτο βαθμό στο κεφάλαιο της
καταγραφής των σημάτων. Εδώ γίνεται η παραδοχή πως η τιμή της συχνότητας θα
πρέπει βρίσκεται σε μια περιοχή που δεν θα επιτρέπει τέτοιες συμπεριφορές
για απλοποίηση.
*** Συστήματα διακριτού χρόνου
Διακριτό σύστημα ορίζεται ως η μετατροπή που απαιτείται για την
ταύτιση του σήματος εξόδου με εκείνο της εισόδου. Σχηματικά
αναπαρίσταται συνήθως, με ένα κουτί που αντιπροσωπεύει τις διεργασίες
που επιδέχεται το σήμα εισόδου για να έχουμε το επιθυμητό στην έξοδο.
Θα δειχθεί αργότερα πως οι τιμές του σήματος εξόδου για κάθε τιμή
της μεταβλητής \(n\) μπορεί να είναι εξαρτημένες από το σήμα εισόδου.
Στην συνέχεια φαίνεται η μαθηματική απεικόνιση ενός συστήματος, που
δρα σε μια ακολουθία (σήμα εισόδου), για την εξαγωγή ενός δεύτερου
σήματος.
\begin{equation}
\begin{align}
out[n] = G\{in[n]\}
\end{align}
\end{equation}

Εδώ αξίζει να αναφερθεί μια έννοια που θα μας απασχολήσει ξανά στην
ενότητα κατασκευής φίλτρων. Πρόκειται για το σύστημα μεταβαλλόμενης μέσης
τιμής ή αλλιώς μέσης τρέχουσας τιμής. Η εμφάνισή της στην βιβλιογραφία
αναφορικά με την επεξεργασία σημάτων είναι εκτενής. Η μέθοδος που
εφαρμόστηκε στην παρούσα περίπτωση περιορίστηκε στο φίλτρο μέσης
τρέχουσας τιμής ή \(F.I.R.\) με τα αρχικά να σημαίνουν \(Finite\ Impulse\ Response\).
Η παρακάτω γενική μορφή του προαναφερόμενου συστήματος, με κάποιες
απλοποιήσεις που θα αναφερθούν σε επόμενο κεφάλαιο, είναι η δομή του
φίλτρου μέσης τιμής.
\begin{equation}
\begin{align}
out[n] = \frac{1}{M_{1}+M_{2}+1}\sum_{k=-M_{1}}^{M_{2}} in[n-k]
\end{align}
\end{equation}
*** Γραμμικότητα συστημάτων
Τα συστήματα που εμφανίζουν γραμμική συμπεριφορά είναι εξ´ ορισμού
παραγόμενα από την αρχή της υπέρθεσης. Πιο συγκεκριμένα αν δύο διαδοχικές
τιμές του σήματος εισόδου παράγουν δυο αντίστοιχες τιμές εξόδου, το σύστημα
θα μπορεί να λέγεται γραμμικό αν και μόνο αν ισχύει ότι:
\begin{equation}
\begin{align}
G\{s_{1}[n]+s_{2}[n]\} = \\
&G\{x_{2}[n]\}+G\{x_{2}[n]\} = out_{1}[n] + out_{2}[n]
\end{align}
\end{equation}
και ταυτόχρονα να ικανοποιείται και η εξής ιδιότητα:
\begin{equation}
\begin{align}
G\{g \cdot s[n]\} = \\
&gG\{s[n]\} = g\cdot out[n]
\end{align}
\end{equation}
όπου \(g\) μια αυθαίρετη σταθερά. Οι ανωτέρω ιδιότητες μπορούν να συνδυαστούν,
ώστε να ικανοποιείται η αρχή της υπέρθεσης. Επιπρόσθετα υπάρχει δυνατότητα
εφαρμογής σε πολλαπλά σήματα εισόδου. Αν για παράδειγμα γνωρίζουμε πως ένα
σύστημα είναι γραμμικό \(F\{\cdot\}\) τότε μπορούμε να υποθέσουμε πως για κάθε έξοδο
του συστήματος θα ισχύει ότι:
\begin{equation}
\begin{align}
in[n] = \sum_{z}b_{z}in_{z}[n] \\
&F\{in[n]\} = out[n] = \sum_{z}b_{z}out_{z}[n] \\
\end{align}
\end{equation}
Για να γίνει πιο κατανοητή η παραπάνω συμπεριφορά ας υποθέσουμε ένα λογαριθμικό
σύστημα,
\begin{equation}
\begin{align}
r[u] = \log_{10}(|x[u]|)
\end{align}
\end{equation}
και ας πάρουμε δύο τιμές για την ακολουθία \(x_{1}[\cdot]\) και \(x_{2}[\cdot]\) να ισούνται με 1 και 10
αντίστοιχα. Αυτό σημαίνει ότι τα σήματα εξόδου θα πρέπει, ικανοποιώντας την
ιδιότητα της ομογένειας, να απέχουν δέκα μονάδες μεταξύ τους όσο δηλαδή και
τα σήματα εισόδου \((x_{2}=10x_{1})\). Όπως είναι προφανές κάτι τέτοιο δεν ισχύει
στην συγκεκριμένη περίπτωση, αφού \(\log1=0,\ \log10=1\).

Η ενότητα αυτή θα μπορούσε να γεμίσει το περιεχόμενο της παρούσας εργασίας
και άλλες τόσες μαζί. Έχουν γραφεί πολλά βιβλία που αναλύουν το ζήτημα,
\selectlanguage{english} [cite:@sigprocfirst] [cite:@oppenheim99]
\selectlanguage{greek},
παρέχοντας στον αναγνώστη εκτεταμένες βάσεις για την επεξεργασία
και μαθηματική αναπαράσταση σημάτων και συστημάτων. Εδώ αναφέρθηκαν οι βασικές
έννοιες και αρχές, με σκοπό την καλύτερη κατανόηση της καταγραφής και της
απομείωσης θορύβου σε σήματα. Στην συνέχεια θα ασχοληθούμε με την καταγραφή
ψηφιακών σημάτων και μερικά από τα σημαντικά προβλήματα κατά την διαδικασία.
** Φαινόμενα καταγραφής σημάτων
    Σε αυτή την ενότητα θα περιγραφούν, οι βασικές θεωρίες που χρησιμοποιούνται
για την ψηφιακή καταγραφή και επεξεργασία σημάτων, καθώς και κάποια προβλήματα
που μπορεί να εμφανιστούν κατά τις διαδικασίες αυτές. Μια από τις σημαντικότερες
θεωρίες είναι του Φυσικού και Ηλεκτρολόγου Μηχανικού \(Harry\ Nyquist\),
όπου θα αναφερθεί στη συνέχεια. Επίσης θα αναλυθούν διαστρεβλώσεις
και καταστρεπτικές συμπεριφορές των συστημάτων κατά την μετατροπή τους, από
συνεχή σε διακριτά σήματα, και σε τρόπους αναγνώρισης και αντιμετώπισης
των προβλημάτων. Θα παρατεθεί ο συνήθης τρόπος απόκτησης ενός διακριτού σήματος
από την καταγραφή σημάτων συνεχούς χρόνου, όπως επίσης και ο τρόπος που αυτό
γίνεται εφικτό από συστήματα καταγραφής σε Η/Υ.
*** Μέθοδος καταγραφής
Ο πιο συνήθης τρόπος εξαγωγής ενός διακριτού σήματος είναι μέσω της περιοδικής
καταγραφής κάποιου συνεχούς σήματος. Στην πράξη αυτό σημαίνει πως καταγράφεται
μία τιμή του σήματος εισόδου σε ένα σύστημα ανά προκαθορισμένο χρονικό διάστημα,
το οποίο ονομάζεται περίοδος καταγραφής του σήματος σε μονάδες δευτερολέπτου.
Διαιρώντας την μονάδα (δείγμα) με την περίοδο αποκτούμε την συχνότητα καταγραφής ορισμένη
σε δείγμα ανά δευτερόλεπτο \(\displaystyle \frac{sample}{sec}\). Το σύστημα που εκτελεί την συγκεκριμένη
επεξεργασία ονομάζεται μετατροπέας αναλογικού σε διακριτό σήμα (\(D.A.C.\))
και σε σημερινές συσκευές καθίσταται σχεδόν υποχρεωτική η χρήση του, για
πολλούς λόγους. Ένα παράδειγμα αποτελεί η ανάγκη για ανάγνωση αισθητήριων
οργάνων και εκτέλεση προδιαγεγραμμένων εντολών σύμφωνα με την τιμή εισόδου.
Σε αυτή την περίπτωση ένας μικρο-ελεγκτής δεν διαθέτει την δυνατότητα
ανάγνωσης και επεξεργασίας αναλογικών σημάτων και επομένως η μετατροπή του
σε διακριτό σήμα υπό κάποια συχνότητα καταγραφής αποτελεί μονόδρομο.

Μετά την περιοδική καταγραφή, είναι αδύνατο να ανακτηθεί επακριβώς το αρχικό
αναλογικό σήμα. Αίτιο αποτελεί το γεγονός πως πολλά αναλογικά σήματα μπορούν
να έχουν όμοια αναπαράσταση με ένα διακριτό, στο πεδίο του χρόνου. Το
συγκεκριμένο φαινόμενο αποτελεί θεμελιώδες πρόβλημα στον τομέα της ανάλυσης
ψηφιακών σημάτων, όμως αργότερα θα δειχθεί πως είναι δυνατός ο περιορισμός
της εν' λόγω συμπεριφοράς καθορίζοντας το πλήθος των δειγμάτων. Στην
συνέχεια θα αναφερθούμε στην βασική *αρχή* που μας επιτρέπει να καταγράφουμε
τα αναλογικά σήματα με τρόπο που αποτυπώνει όλη την πληροφορία που
εμπεριέχουν. Σημασία δίνεται στην έννοια της πληροφορίας καθώς ο σκοπός
χρήσης των σημάτων είναι η κωδικοποίηση αυτής, όπως ήδη έχει αναφερθεί
στην εισαγωγή.
*** Θεώρημα δειγματοληψίας
Στο θεώρημα καταγραφής σημάτων ορίζεται η ελάχιστη συχνότητα δειγματοληψίας με
σκοπό την δυνατότητα ανακατασκευής του αρχικού αναλογικού σήματος. Ο ορισμός αναφέρει
πως, άν ένα συνεχές σήμα δεν περιέχει πληροφορία πάνω από κάποια συχνότητα Α σε
\(Hz\), τότε για να είναι δυνατή η ανάκτηση της αρχικής κυματομορφής θα πρέπει να
ισχύει ότι:
\begin{equation}
\begin{align}
f_{s} \geq 2A \\
\end{align}
\end{equation}

Από τον παραπάνω ορισμό προκύπτει πως απαιτούνται ταυτόχρονα δύο ζητήματα. Το
πρώτο καθορίζει κάποιο ελάχιστο όριο για την συχνότητα καταγραφής, που προκύπτει
από την μέγιστη συχνότητα του αναλογικού σήματος. Το δεύτερο αναφέρεται σε
ανακατασκευή του αρχικού, χωρίς να προσδιορίζει την μέθοδο που θα χρησιμοποιηθεί.

Τα σήματα που παρουσιάζουν απουσία πληροφορίας σε ορισμένες συχνότητες ονομάζονται
*περιορισμένου φάσματος*. Τέτοια συμπεριφορά έχουν σήματα χαμηλών συχνοτήτων, που δεν
εμφανίζουν ισχύ σε συχνότητες άνω των 200 \(Hz\). Αντίστοιχα υπάρχουν σήματα που
εμπεριέχουν πληροφορία σε ένα ορισμένο εύρος, από 7 έως 10 \(kHz\). Και τα δύο αυτά
σήματα κατηγοριοποιούνται ως *σήματα περιορισμένου φάσματος*.

Ιδιαίτερο ενδιαφέρον παρουσιάζει το γεγονός πως το συγκεκριμένο θεώρημα αναφέρεται
στην βιβλιογραφία με το προσωνύμιο Θεώρημα Δειγματοληψίας \(Shannon\), ενώ
η πρώτη αναφορά γίνεται από τους Βρετανούς μαθηματικούς \(E.T.\) και \(J.M.\)
\(Whittaker\) και \(Ferrar\). Στην Ρωσία το θεώρημα κατεγράφη από τον
\(Kotel'nikov\) και πήρε το όνομά του από εκείνον. Ο \(Shannon\)
το χρησιμοποίησε για την έρευνα που σήμερα μας είναι γνωστή ώς η θεωρία της
πληροφορίας, και γι' αυτό πολλές φορές στην μαθηματική βιβλιογραφία
αναφέρεται και θεώρημα δειγματοληψίας \(WKS\) από τα αρχικά των παραπάνω.
*** Αναπαράσταση στο πεδίο συχνοτήτων
Το θεώρημα της δειγματοληψίας μπορεί να αποδειχθεί μαθηματικά. Όμως
οι ιδιότητες και οι αιτίες που το προκαλούν, φαίνονται πιο ξεκάθαρα
εξετάζοντας την διαδικασία της μετατροπής αναλογικού σε διακριτό σήμα,
στο πεδίο των συχνοτήτων. Αν αυθαίρετα υποθέσουμε πως ένα
καταγεγραμμένο ψηφιακό σήμα είναι αναλογικό, οι απότομες διακυμάνσεις
στην ισχύ του σήματος προσθέτουν στοιχεία στην ακολουθία, υψηλών
συχνοτήτων, που προσθέτονται τελικά στο σήμα. Η καταγραφή λοιπόν ενός
αναλογικού σήματος μπορεί να παρομοιαστεί με δραστικό τεμαχισμό του
αρχικού.

Ως παράδειγμα μπορεί να χρησιμοποιηθεί μια ημιτονοειδής συνάρτηση
σχετικά απλή ώστε να γίνει κατανοητή η παραπάνω συμπεριφορά. Έστω
πως για ένα συνεχές σήμα εφαρμόζουμε την μέθοδο της δειγματοληψίας
ως εξής:
\begin{equation}
\begin{align}
x(t)&=\cos(2 \pi f_{z}t + \phi),\ t=cT,\ c \in [0, +\infty),\ c \in \mathbb{Z} \Rightarrow \\
&x(cT) = \cos(2 \pi f_{z} cT + \phi) \\
\end{align}
\end{equation}
Ας δούμε τώρα τι συμβαίνει σε περίπτωση που υπολογίσουμε την τιμή
του καταγεγραμμένου σήματος σε συχνότητα ίση με \(f_{tot} = f_{z}+f_{s}\):
\begin{equation}
\begin{align}
x_{a}(cT) &= \cos(2 \pi cT \cdot (f_{z}+f_{s})+ \phi) \Rightarrow \\
&= \cos(2 \pi cf_{z}T + 2 \pi c + \phi) \Rightarrow \\
&= \cos(2 \pi cf_{z}T + \phi) \Rightarrow \\
&= x(cT)
\end{align}
\end{equation}
Όπως φαίνεται για κάθε δείγμα εγγραμμένο με κάποια συχνότητα
πολλαπλάσια από εκείνη της καταγραφής \(f_{s}\), το σήμα εμπεριέχει στοιχεία
στο συγκεκριμένο φάσμα. Στην περίπτωση που δεν ικανοποιείται το θεώρημα
της δειγματοληψίας προκύπτει η λεγόμενη αλλοίωση, προσθέτοντας αναληθή
δείγματα στο σήμα ή αλλιώς *ψευδώνυμα συχνοτήτων* \((aliased\ frequencies)\).
Η καταστρεπτική αυτή συμπεριφορά θα αναλυθεί στην παρακάτω ενότητα ενώ
αξίζει να σημειωθεί πως, υπάρχει πιθανότητα να υποφέρουν και οι πειραματικές
μετρήσεις του εργαστηρίου από το φαινόμενο αυτό, καθώς η μέγιστη συχνότητα
καταγραφής που επιτεύχθηκε ήταν στα 500 \(kHz\).
*** Αλλοίωση
Ως αλλοίωση αναφερόμαστε εδώ στο αποτέλεσμα καταγραφής ενός σήματος,
όπου η έξοδος αποτελείται από διαφορετικά σήματα και δεν είναι δυνατό να
επαναδημιουργιθεί το αρχικό. Συνήθως η έξοδος είναι μετατοπισμένη ως
προς το φάσμα των συχνοτήτων, όμως πολλές φορές επηρεάζεται και η ισχύ.
Είναι λοιπόν σημαντικό να αποφευχθεί, όσο το δυνατόν περισσότερο, η
αλλοίωση των σημάτων κατά την διαδικασία καταγραφής τους. Για τον λόγο
αυτό συνήθως εφαρμόζεται ένα φίλτρο χαμηλών συχνοτήτων ή φίλτρο κατά της
αλλοίωσης $\en{(A.A.F. (Anti\ Aliasing\ Filter))}$.

Στην ελληνική βιβλιογραφία το φαινόμενο αυτό αναφέρεται ως *ψευδώνυμα συχνοτήτων*
και ερευνήθηκε από τους $\en{Harry\ Niquist}$ και $\en{Claude\ Shannon}$, ερευνητές στα
$\en{Bell\ Labs}$,
οι οποίοι συνέβαλαν σημαντικά στον τομέα των τηλεπικοινωνιών και την καταγραφή
σημάτων. Άλλωστε το θεωρητικό υπόβαθρο για την καταγραφή *ψηφιακών σημάτων* απαλλαγμένων
από ψευδώνυμα αναπτύχθηκε από τους δύο κατά τις δεκαετίες 1920-1950.
Στην εργαστηριακή εγκατάσταση που εξετάστηκε ήταν αδύνατο να αποφευχθεί η εμφάνισή
τους, όμως χρησιμοποιήθηκε η μέθοδος της επεξεργασίας σημάτων πολλαπλών συχνοτήτων
καταγραφής. Στην συγκεκριμένη μέθοδο θα αναφερθούμε επιγραμματικά στην συνέχεια,
όμως αξίζει να σημειωθεί ότι δίνει την δυνατότητα εντοπισμού των αλλοιώσεων,
αποδεκατίζοντας το σήμα, σύμφωνα με μία σταθερά και εξετάζοντας την γραφική του
παράσταση σε σχέση με την αρχική καταγραφή. Όσο μειώνεται ο αριθμός των δειγμάτων
το σήμα καταστρέφεται ηθελημένα, παράγοντας ψευδώνυμα συχνοτήτων τα οποία θα πρέπει
να είναι όλα διαφορετικά.

#+attr_latex:  :width 250px
#+attr_latex:  :height 140px
#+ATTR_LATEX: :caption \caption{Φαινόμαινο αλλοίωσης σήματος μετά την καταγραφή του.}
[[./aliasing_from_downsampling.png]]

Το συμπέρασμα αυτό προέκυψε χρησιμοποιώντας μια μέθοδο που εντάσσεται στην κατηγορία
της επεξεργασίας σημάτων πολλαπλών συχνοτήτων, μεταβάλλοντας την συχνότητα καταγραφής
αφαιρώντας πλήθος δειγμάτων, και συγκρίνοντας τις γραφικές παραστάσεις στα πεδία
συχνοτήτων και χρόνου.
Την απόρριψη του συγκεκριμένου τύπου “θορύβου” στις σύγχρονες συσκευές αναλαμβάνουν
ειδικά φίλτρα που ονομάζονται  $\en{F.I.R.}$. Αντίστοιχα φίλτρα χρησιμοποιήθηκαν και στην
επεξεργασία των δεδομένων και συγκρίθηκαν τα αποτελέσματα με άλλους τύπους όπως θα
δούμε παρακάτω.

Τα ψευδώνυμα αυτά εμφανίζονται σε υποδειγματοληπτημένα σήματα. Αν είναι επιθυμητό
να εξεταστεί ένα σήμα που μπορεί να εμπεριέχει θόρυβο σε συχνότητες 2-3 \(kHz\), τότε για
την αποφυγή της αλλοίωσης ή αναδίπλωσης του σήματος, θα πρέπει η καταγραφική συσκευή
να έχει την δυνατότητα καταγραφής τουλάχιστον 6 \(kHz\). Στο πλαίσιο της επεξεργασίας των
μετρήσεων της αεροσήραγγας που η μέγιστη καταγραφή αγγίζει τα 500 \(kHz\), το μέγιστο
φάσμα σήματος που μπορούσε να εξεταστεί είναι 250 \(kHz\). Έτσι υπήρχε ανάγκη για
περαιτέρω εξέταση και την λύση παρέχει η μέθοδος του αποδεκατισμού. Εφαρμόζοντάς την,
εξάγοντας κάθε φορά διαφορετικό αριθμό δειγμάτων από το αρχικό, μας δίνεται η
δυνατότητα να συγκρίνουμε τα σήματα και να υποθέσουμε τυχών επιρροή που μπορεί να
έχουν συχνότητες μεγαλύτερες από εκείνες της συχνότητας καταγραφής. Στο διάγραμμα
που ακολουθεί φαίνεται ένα σήμα στο πεδίο της συχνότητας αποδεκατισμένο επιλέγοντας
κάθε 100ο στοιχείο της αρχικής ακολουθίας.

#+attr_latex: :height 280px
#+attr_latex: :width 500px
#+ATTR_LATEX: :caption \caption{Αποδεκατισμένο σήμα ανά 100 δείγματα (5 \(kHz\)) μαζί με το αρχικά καταγεγραμμένο σε μικρότερη συχνότητα 5 \(kHz\) σε σύγκριση με εκείνο στα 500 \(kHz\).}
[[file:./decimation/with_aliasing.png]]
** Μείωση αριθμού δειγμάτων
Η τεχνική αυτή εφαρμόζεται σε ψηφιακά σήματα με πολλά δείγματα ανά
χρονικό διάστημα που όμως η τυπική απόκλιση προδίδει μια περιοδική
κίνηση που σχετίζεται με ταλάντωση. Τότε είναι εύλογο να χωριστεί το
σήμα σε μικρότερα “κομμάτια”. Αυτό έχει σαν αποτέλεσμα την ταχύτερη
ανάλυση των δεδομένων και την ευελιξία της επιλογής περιοχών του σήματος σε
συνάρτηση με τον χρόνο ή κάποιο άλλο κριτήριο. Εφαρμόζεται συχνά στην
καθημερινότητά μας, καθώς η συμπίεση αρχείων και τα πρότυπα αρχεία ήχου
και εικόνας συμπεριλαμβάνουν μία ή και περισσότερες διαδικασίες μείωσης
του αριθμού των δειγμάτων.

Στην επεξεργασία ψηφιακών σημάτων οι όροι μείωση αριθμού δειγμάτων,
αποδεκατισμός και συμπίεση μπορεί να έχουν ταυτόσημα νοήματα. Μπορεί όμως,
να περιγράφουν την απομείωση συχνοτήτων και απόρριψη αριθμού δειγμάτων σε
ένα σύστημα ψηφιακής καταγραφής σημάτων πολλαπλών συχνοτήτων. Αργότερα
θα αναλυθεί η σημασία τέτοιων συστημάτων.
*** Ορισμός
Αποδεκατισμός ενός ψηφιακού σήματος σημαίνει η αποθήκευση τελικώς του
κάθε 10ου π.χ. δείγματος από το αρχικό καταγεγραμμένο σήμα με συγκεκριμένη
συχνότητα καταγραφής. Αυτό έχει επεκταθεί ορίζοντας τον αποδεκατισμό
κατά έναν παράγοντα που συνήθως είναι σταθερός αριθμός και μπορεί να
λάβει ακέραιες και δεκαδικές τιμές.

H ανάγκη να λαμβάνει ο παράγοντας αυτός μια λογική τιμή γίνεται αντιληπτή
από ένα απλό παράδειγμα. Για ένα ψηφιακό σήμα που έχει διάρκεια πέντε (5)
δευτερόλεπτα και καταγράφηκε από συσκευή που είχε συχνότητα καταγραφής 20
$\en{Hertz}$, ένας παράγοντας αποδεκατισμού 101, προφανώς δεν θα άφηνε κανένα
δείγμα στο νέο ψηφιακό σήμα. Επιπρόσθετα το όριο για να αποφύγουμε την
αλλοίωση απαιτεί το τελικό αποτέλεσμα των διαδικασιών να είναι τα 10 δείγματα ανά δευτερόλεπτο
(10 $\en{Hz}$). Επομένως θέτοντας τον παράγοντα αποδεκατισμού 51 θα παρείχε ένα
σήμα που θα ήταν αλλοιωμένο. Όταν η διαδικασία αυτή εφαρμόζεται σωστά σε
μια αλληλουχία δειγμάτων ενός σήματος ή μιας συνεχούς συνάρτησης, παράγεται
μια προσομοίωση του καταγεγραμμένου με μικρότερη συχνότητα.
*** Ένα φίλτρο ως παράδειγμα
Όταν το φίλτρο κατά της αλλοίωσης είναι σχεδιασμένο με πρότυπο $\en{IIR}$, τα
οποία θα αναλυθούν παρακάτω, η διαδικασία βασίζεται στην ανάδραση της
εξόδου στην είσοδο του φίλτρου πριν την έναρξη του δεύτερου σταδίου. Για
το πρότυπο σχεδιασμού $\en{FIR}$ είναι εύκολο να υπολογιστεί για κάθε Μ εξόδου.
Ο υπολογισμός που γίνεται από ένα τέτοιο φίλτρο αποδεκατισμού για κάθε
νιοστή έξοδο δείγματος φαίνεται παρακάτω.

\begin{equation}
y[n]=\sum_{k=0}^{K-1}x[nM-k] \cdot h[k],
\end{equation}


Όπου η ακολουθία $\en{h}$[•] είναι η απόκριση του κρουστικού παλμού ($\en{impulse\ response}$)
, και K είναι το μήκος. Η $\en{x}$[•] αντιπροσωπεύει το σήμα εισόδου
εξαγόμενο από το φίλτρο με λιγότερα δείγματα.
Σε επεξεργαστές γενικής χρήσης μετά τον υπολογισμό της παραπάνω εξίσωσης
για κάποιον αριθμό $\en{n}$, ο ευκολότερος τρόπος να υπολογιστεί το $\en{y[n+1]}$
είναι η καθυστέρηση της αρχής της ακολουθίας $\en{x}$[•] κατά Μ, και να λυθεί
το παραπάνω άθροισμα ξανά. Αν ο παράγοντας Μ=2, η συνάρτηση $\en{h}$[•] μπορεί
να αντιπροσωπεύει ένα φίλτρο μισών συχνοτήτων, όπου σχεδόν το μισό πλήθος
των δειγμάτων του αρχικού σήματος θα είναι μηδενικής ισχύος ($\en{amplitude}$)
και δεν θα συμπεριληφθούν στο προϊόν πολλαπλασιασμού.
Οι *τιμές* της απόκρισης του παλμού κατά διαστήματα Μ δημιουργούν
υποαληλλουχίες, πλήθους Μ περιπλεγμένες μεταξύ τους.Το παράγωγο του
πολλαπλασιασμού είναι η πρόσθεση των προϊόντων από τον πολλαπλασιασμό
κάθε υποαληλλουχίας με το καταγεγραμμένο σήμα $\en{x}$[•]. Επιπρόσθετα λόγω
της μείωσης του πλήθους των δειγμάτων στο σήμα κατά Μ, κάθε σήμα που
χρησιμοποιήθηκε στον προηγούμενο υπολογισμό κάποιου Μ προϊόντος δεν θα
επαναληφθεί σε επόμενο υπολογισμό. Αυτός είναι και ο λόγος που τα φίλτρα
μικρής τάξης Μ $\en{FIR}$ φιλτράρουν μια από τις αλληλουχίες της εισόδου κάθε
φορά και τα Μ προϊόντα προσθέτονται για να κατασκευαστεί το σήμα εξόδου.
Αυτή η μέθοδος εφαρμόζεται σε συστήματα πολλαπλών επεξεργαστών, όπου ένα
σήμα χωρίζεται σε φάσεις και φιλτράρεται ξεχωριστά από Μ αριθμό φίλτρων
και τελικά προσθέτονται για την δημιουργία του σήματος εξόδου. Τα παραπάνω
φίλτρα ονομάζονται και πολυφασικά.

Για εγκυκλοπαιδικούς λόγους αξίζει να σημειωθεί πως είναι πιθανό σε κάθε
φάση του υπολογισμού να αντικαθιστούμε τις τιμές της προηγούμενης φάσης
με μηδενικές τιμές, σε ένα αντίγραφο της αλληλουχίας $\en{h}$[•], ώστε να
επεξεργαστεί το αρχικό σήμα στην συχνότητα εισόδου (πολλαπλασιάζοντας
με 0) και αποδεκατίζοντας την έξοδο κατά έναν παράγοντα Μ. Η παραπάνω
διαδικασία ονομάστηκε στα αγγλικά $\en{the\ first\ Noble\ identity}$ και εφαρμόζεται σε
διάφορες πολυφασικές μεθόδους.
** Κατηγορίες Φίλτρων
Λόγω των πολλών εφαρμογών που έχουν και την εκθετική αύξηση της χρήσης
ηλεκτρονικών συσκευών στην καθημερινότητα, οι δυνατότητες επεξεργασίας
ψηφιακών σημάτων αποτελεί πρακτικά απαραίτητη προϋπόθεση. Έτσι η ανάγκη
για την ανάπτυξη διαφόρων τύπων φίλτρων, π.χ. το φίλτρο μέσης τρέχουσας
τιμής ($\en{F.I.R.}$), το φίλτρο άπειρης κρουστικής απόκρισης ($\en{I.I.R.}$) και το μεσιανό
φίλτρο \((median\ filters)\), έγινε εμφανής από το στάδιο ακόμα της ανάπτυξης
του ραδιοφώνου. Στην συνέχεια θα αναφερθούμε στις δύο από τις τρείς αυτές
κατηγορίες αναφέροντας παραδείγματα από τις μεθόδους που χρησιμοποιήθηκαν
στην ανάλυση των δεδομένων από την εργαστηριακή εγκατάσταση.
Η γενική διαφοροποίηση που γίνεται αρχικά είναι ως προς το εύρος
συχνοτήτων που επηρεάζουν. Έτσι αν απορρίπτονται οι ύψηλες συχνότητες, το
φίλτρο ονομάζεται διέλευσης χαμηλών συχνοτήτων ($\en{low-pass\ filter}$)
ενώ το αντίστροφο ονομάζεται φίλτρο διέλευσης υψηλών συχνοτήτων ($\en{high-pass\ filter}$).
Αν το φίλτρο επηρεάζει μία περιοχή ή *φάσμα* συχνοτήτων και
απορρίπτει όσες βρίσκονται πριν και μετά, ονομάζεται φίλτρο διέλευσης
εύρους συχνοτήτων ($\en{band-pass\ filter}$).
*** TODO Φίλτρα διέλευσης συχνοτήτων
Εδώ πρέπει να εξιγήσω τι γίνεται με τα φίλτρα που αφήνουν το ευρος συχνοτήτων
*** TODO Φίλτρα απόρριψης συχνοτήτων
Εδώ πρέπει να εξιγήσω τι γίνεται με τα φίλτρα που απορρίπτουν το ευρος συχνοτήτων
** Φίλτρο μέσης τρέχουσας τιμής
Στα προηγούμενα κεφάλαια επικεντρωθήκαμε περισσότερο στην μαθηματική αναπαράσταση
των σημάτων, με μια μικρή αναφορά στα γραμμικά συστήματα. Τα φίλτρα αποτελούν γραμμικά
συστήματα και ως εκ τούτου αντιμετωπίζονται, λαμβάνοντας υπόψη τις ανάλογες ιδιότητες
και συμπεριφορές. Σκοπός σχεδιασμού αυτών των συστημάτων αποτελεί η αφαίρεση στοιχείων
από κάποιο σήμα, ή η τροποποίηση προκαθορισμένων χαρακτηριστικών του. Εδώ θα αναφερθούμε
στην κατηγορία των συστημάτων πεπερασμένης κρουστικής απόκρισης, ή όπως θα αποκαλούνται
στην συνέχεια για συντομία \(F.I.R.\). Για αρχή μπορούμε να φανταστούμε πως η έξοδος του
φίλτρου παράγεται αθροίζοντας ένα πεπερασμένο αριθμό δειγμάτων όπου εφαρμόζουμε κάποιο
“βάρος στάθμισης”. Στόχος των επόμενων ενοτήτων είναι ο προσδιορισμός των βασικών αρχών,
πού διέπουν τα διακριτά συστήματα και την εφαρμογή τους στον σχεδιασμό των \(F.I.R.\). Θα
επανέλθουμε στον όρο της γραμμικότητας και θα αναφερθούμε και στην χρονική αμεταβλητότητα
που συνδυασμένες καλύπτουν ένα ευρύ φάσμα της εν' λόγω κατηγορίας.
*** Μέση τρέχουσα τιμή και σχεδιασμός συστήματος
:PROPERTIES:
:on:       <2023-07-23 Κυρ 15:31>
:END:
Ένας από τους πιο διαδεδομένους τρόπους μετασχηματισμού σημάτων είναι ο υπολογισμός
της μέσης τιμής για δύο ή παραπάνω δείγματα, με σκοπό την αφαίρεση έντονων στιγμιαίων
διακυμάνσεων του σήματος γύρω από κάποια επιθυμητή τιμή. Λόγω της πληθώρας αλγόριθμων
για τον υπολογισμό μέσης τιμής ακολουθιών, είναι από τις πιο συχνά εφαρμοσμένες τεχνικές
στον τομέα της οικονομικής επιστήμης. Πιο συγκεκριμένα, στην μακροχρόνια ανάλυση των
τιμών μετοχής σε χρηματιστήριο, εφαρμόζεται για τον υπολογισμό της μετοχής, σε συνάρτηση
της απόκλισης λόγω οικονομικών φαινομαίνων. Με απλά λόγια, αν κάποιος επιθυμεί να εξετάσει
την ανοδική ή καθοδική πορεία μιας μετοχής δεν τον αφορά η αυξομείωση της τιμής ανά ημέρα,
πόσο μάλλον ανά δευτερόλεπτο. Τα τελευταία δεκαδικά όμως αλλάζουν κάθε δευτερόλεπτο, σε
πραγματικό χρόνο και επομένως εφαρμόζεται ένα φίλτρο μέσης τρέχουσας τιμής,
ώστε να είναι δυνατή η αξιοποίηση της πληροφορίας των μεταβολών, με μικρότερη απόκλιση,
από την μέση τιμή.

Για να γίνει πιο κατανοητό ας υποθέσουμε πως ένα ψηφιακό σήμα μπορεί να αναπαρασταθεί
ως \(in[z]\). Εφαρμόζεται ένα σύστημα φίλτρου όπως του ανωτέρω παραδειγματος, υπολογίζοντας
τον μέσο όρο από πέντε δείγματα την φορά. Τότε για κάθε δείγμα της ακολουθίας εξόδου του
συστήματος θα ισχύει ότι:
\begin{equation}
\label{fir-filter}
\begin{align}
out[n] = \frac{1}{k} \cdot \sum_{z}^{{k-1}}in[n+z], k=5 \\
\end{align}
\end{equation}
Η ανωτέρω σχέση \((\ref{fir-filter})\) ονομάζεται και σχέση διαφορών, αποτελόντας πλήρη περιγραφή ενός *συστήματος
\(F.I.R\)*, δίνοντας την δυνατότητα στον χρήστη να εξάγει πληροφορία για κάθε τιμή του σήματος
εισόδου \(in[n]\). Όσο για τον προσδιορισμό της αρχικής τιμής της μεταβλητής \(z\), τις περισσότερες
φορές επιλέγεται η τιμή μηδέν με σκοπό να συμπεριλάβουμε το πρώτο δείγμα της εισόδου,
στο οποίο αναφερόμαστε εδώ και στην συνέχεια ώς \(in[0]\). Το δείγμα που λαμβάνεται σαν “αρχικό”,
για \(n = [1,\ 2,\ 3,\ ...] \) μπορούμε να το χαρακτηρίσουμε και ως το παρόν του σήματος. Αντίστοιχα τα
δείγματα που έπονται αυτού, και χρησιμοποιούνται στο παραπάνω σύστημα για τον υπολογισμό
της εξόδου, συνθηκολογώντας αναφέρονται στην βιβλιογραφία ως μέλλον του σήματος. Η
συγκεκριμένη οπτική εντάσσει την έννοια των “παραθύρων” καθώς ένα συρόμενο παράθυρο, πέντε
τιμών συνεχίζοντας το παράδειγμα, θα ορίσει τις επιλεγμένες τιμές για τον υπολογισμό του
σήματος εξόδου \(out[n]\).

#+NAME: fig:explain
#+begin_src jupyter-python :session python3 :async no :exports results
# add the plot to explain the above equation
"""Should investigate this and how to make a plot with anottation"""
signal = np.linspace(2 * np.pi * 2, 20, 20)
# plt.plot(signal, np.linspace(0, 5, 1), marker='o')
fig, ax = plt.subplots()
ax.plot(signal, np.linspace(2 * np.pi * 2, 20, 20), marker='o')
# plt.xlim(-10, 10)
# plt.ylim(-10, 10)
threshold=16
ax.annotate('Παρόν (z=n)', xy=(16.05, 16.1),
             xytext=(14, 18),
             arrowprops=dict(facecolor='red', shrink=0.05))
ax.fill_between(signal+0.2, 0, 1, where=np.linspace(2 * np.pi * 2, 20, 20) > threshold,
                color='green', alpha=0.5, transform=ax.get_xaxis_transform())
ax.fill_between(signal+0.2, 0, 20, where=np.linspace(2 * np.pi * 2, 20, 20) < threshold,
                color="gray", alpha=0.5, transform=ax.get_xaxis_transform())
ax.text(14.5+0.1 / 2, (0+10) / 2, "Παρελθόν\nσήματος", ha='center', va='center', fontsize=16, color="black")
ax.text(18+0.1 / 2, (0+10) / 2, "Μέλλον\nσήματος", ha='center', va='center', fontsize=16, color='green')
plt.xlabel('n')
plt.ylabel('out[n]')
# ax.legend()
ax.grid('both')
#+end_src

#+CAPTION: Παράδειγμα απεικόνισης παραθύρου και της έννοιας του παρελθόντος και μέλλοντος σήματος.
#+LABEL: fc1_10
#+RESULTS: fig:explain
[[file:./.ob-jupyter/a6dbd827792e535329964693eab1d13ea46b08e5.png]]
*** Σχεδιασμός και εφαρμογή φίλτρων
Ένα \(F.I.R.\) φίλτρο κατασκευάζεται από την γενική εξίσωση διαφορών που θα δούμε παρακάτω,
όμως αξίζει να αναφέρουμε ένα χαρακτηριστικό. Για τα φίλτρα που κατασκευάζονται
χρησιμοποιώντας στοιχεία του παρελθόντος από το σήμα εισόδου για τον υπολογισμό της μέσης τιμής,
έχει επικρατήσει η ονομασία αιτιατό φίλτρο. Με την συγκεκριμένη έκφραση εννοούμε πως
η αιτία που καθορίζει το αποτέλεσμα δεν προηγείται αυτού. Αντίστοιχα τα φίλτρα που
βασίζονται σε στοιχεία που προπορεύονται του εξεταζόμενου στοιχείου ονομάζονται μη
αιτιατά. Ας δούμε την γενική εξίσωση που καθορίζει ένα φίλτρο όπως ορίστηκε παραπάνω,
για κάποιο αιτιατό φίλτρο μέσης τρέχουσας τιμής.
\begin{equation}
\begin{align}
out[x] = \sum_{z=0}^{{T}} a_{z} in[x-z] \\
\end{align}
\end{equation}

Γίνεται λοιπόν αντιληπτό πως, λόγω του πεπερασμένου πεδίου ορισμού του σήματος εισόδου
και της διακριτότητας του φάσματός του, θα υπάρχουν στοιχεία κατά τον υπολογισμό των
αρχικών δειγμάτων εξόδου σε ένα παράθυρο αντίστοιχο εκείνο του αριθμού Τ, που βασίζονται
σε λιγότερα από πέντε στοιχεία. Αυτό στις εφαρμογές των φίλτρων προβλέπεται και κατ'
επέκταση δίνεται η δυνατότητα ο δείκτης \(z\) να λάβει αρνητικές τιμές. Στην αρχή μοιάζει
παράδοξο, καθώς δεν μπορεί στην φύση να υπάρξει αρνητικός αριθμός δειγμάτων, όμως μας
δίνει την δυνατότητα να εφαρμόζουμε σχετικά μεγάλα παράθυρα, χωρίς τον φόβο διαστρέβλωσης
της εξόδου.

Ένα φίλτρο για να οριστεί πλήρως, είναι απαραίτητο να γνωρίζουμε με σαφήνεια όλες τις
τιμές των συντελεστών του, δηλαδή των \(a_{z}\) στο παράδειγμα που παρουσιάστηκε το αιτιατό φίλτρο.
Υποθέτοντας τις παρακάτω τιμές για το σύνολο αυτό, μπορούμε να γνωρίζουμε την εξίσωση
που περιγράφει το ανάλογο φίλτρο π.χ.:
\begin{equation}
\begin{align}
\{a_{z}\} = \{5,\ -7,\ 2,\ 1,\ 9\} \Rightarrow \\
out[x] &= \sum_{z=0}^{4}a_{z}in[x-z] \\
&= 5in[x] - 7in[x-1] + 2in[x-2] + in[x-3] +9in[x-4]
\end{align}
\end{equation}

Όπως φαίνεται είμαστε σε θέση να υπολογίσουμε το σήμα εξόδου για κάθε τιμή της εισόδου.
Ο αριθμός Τ ονομάζεται τάξη του φίλτρου ενώ το πλήθος των συντελεστών ονομάζεται μήκος ή
μέγεθος. Οι έννοιες αυτές προέρχονται από τον μετασχηματισμό \(Z\), μέθοδος η οποία  ξεπερνά
το πλαίσιο της παρούσας εργασίας. Aς συνδέσουμε για λόγους κατανόησης, το μήκος με την
ταχύτητα υπολογισμού του φίλτρου, ενώ την τάξη με την μεταβολή της ταχύτητας κατακρημνισμού της
εξίσωσης του φίλτρου ή όπως ονομάζεται στα περισσότερα όργανα ηλεκτρονικής μουσικής
\(release\ value\).
*** notes :noexport:
convolution sum == αθροισμα συνέλιξης
- να προστεθεί
  [[file:../books/ScienceDirect_articles_18Feb2023_15-57-03.874/6---Finite-impulse-response-filter-des_2003_Practical-Digital-Signal-Process.pdf][fir intro]]
- output sequence

  \begin{equation}
  \begin{align}
  y(n)=\sum_{m=0}^{M}x(m)h(n-m)
  \end{align}
  \end{equation}
** Φίλτρο άπειρης κρουστικής απόκρισης
Τα φίλτρα άπειρης κρουστικής απόκρισης είναι, όπως προδίδει και το όνομά τους,
ακριβώς το αντίθετο από εκείνα της πεπερασμένης. Πρακτικά αυτό σημαίνει
πως η διάρκεια της κρουστικής απόκρισης είναι άπειρη. Συμπερασματικά, καθώς ο
υπολογισμός γίνεται χρησιμοποιώντας την μέθοδο της ανάδρασης, αξιοποιούμε την
έξοδο του φίλτρου για την επανατροφοδότηση της εισόδου. Η γενική εξίσωση της
παρούσας κατηγορίας έχει την μορφή:
\begin{equation}
\begin{align}
out[z] = \sum_{f=0}^{\infty}u(f)in(z-f) \\
\end{align}
\end{equation}

Όπως είναι φανερό η διαφορά εδώ είναι πως το άνω όριο της πρόσθεσης προσεγγίζει
το άπειρο, σε θεωρητικό επίπεδο τουλάχιστον. Αυτό συμβαίνει γιατί η απόκριση
της ακολουθίας \(u\) διαθέτει άπειρη διάρκεια. Έτσι όπως θα δειχθεί αμέσως μετά,
ο υπολογισμός με την μέθοδο της συνέλιξης καθίσταται μη πρακτικός και εφαρμόζεται
αναδρομή. Για να γίνει πιο κατανοητή η έννοια της αναδρομής ας δούμε ένα
παράδειγμα που, κατά την σωστή εφαρμογή του, απαιτούνται I+T+1
πολλαπλασιασμοί και I+T αθροίσεις για τον υπολογισμό της απόκρισης του φίλτρου.
\begin{equation}
\begin{align}
out[z] = - \sum_{f=1}^{T}c(f)out(z-f) + \sum_{f=0}^{I}d(f)in(z-f) \\
\end{align}
\end{equation}

Σημαντικό μειονέκτημα των \(IIR\) φίλτρων είναι η διαφορά φάσης που παράγεται στην
έξοδό τους. Αν είναι ζωτικής σημασίας, τότε υπερτερούν τα \(FIR\), αφού ο υπολογισμός
της απόκρισης των συστημάτων απειροστού μεγέθους απαιτεί μη γραμμική ανάλυση.
Στην αντίθετη περίπτωση η τάξη (\(order\)) του φίλτρου, για την απόρριψη του ίδιου
φάσματος συχνοτήτων ενός σήματος θα είναι πολύ μικρότερη κάνοντας χρήση της
αναδρομικής ιδιότητας των \(IIR\). Στην επόμενη ενότητα φαίνονται κάποια παραδείγματα
με τον αντίστοιχο κώδικα σε \(python\) για την δημιουργία δειγμάτων των βασικών
αποκρίσεων σε συνάρτηση του αριθμού δειγμάτων. Αρχικά φαίνονται έντονες
διαφορές στην απόκριση που παρέχουν όμως όλα υπολογίζονται με την χρήση των
παραπάνω εξισώσεων. Εξαίρεση απαιτεί το φίλτρο \(butterworth\) που
λεπτομέρειες θα αναφέρουμε στην συνέχεια.

*** Παραδείγματα με κώδικα
\selectlanguage{greek}
Εδώ φαίνονται μερικά από τα βασικότερα φίλτρα άπειρης κρουστικής απόκρισης, που
από εδώ και πέρα θα αναφερόμαστε σε αυτά ως \(IIR\). Οι τύποι των παρακάτω φίλτρων
αποτελούν τα πιο διαδεδομένα και εύχρηστα, για την προσομοίωση φυσικών εφαρμογών
σε προγραμματιστικό περιβάλλον. Δεν είναι άλλωστε τυχαίο πως οι περισσότερες
γλώσσες προγραμματισμού παρέχουν μια ή και περισσότερες βιβλιοθήκες για τον
σχεδιασμό και τη χρήση τους.

Το φίλτρο \(butterworth\) αποτελεί την καλύτερη δυνατή λύση για έξοδο με την μικρότερη
ενίσχυση καθώς όπως φαίνεται και στο γράφημα δεν παρουσιάζει ταλαντωτικές
συμπεριφορές στις συχνότητες διέλευσης και απόρριψης. Αυτό επιτυγχάνεται
μειώνοντας την ταχύτητα μεταβολής της ισχύος του σήματος, αποκτώντας έτσι μια
περιοχή μετάβασης όπου οι συχνότητες δεν απορρίπτονται όμως απομειώνονται σε
σημαντικό βαθμό ώστε να μην αλλοιώνεται η έξοδος του.

Το \(chebyshev\) ενώ εκ πρώτης όψης φαίνεται να επηρεάζει το σήμα σε μη
αποδεκτό βαθμό, προνόμιό του αποτελεί η ταχύτητα που προσφέρει αποτελέσματα.
Αυτό οφείλεται στην μέθοδο της αναδρομής που χρησιμοποιείται κατά την επεξεργασία
με το συγκεκριμένο φίλτρο. Τα περισσότερα χρησιμοποιούν την μέθοδο της συνέλιξης.

Παρακάτω φαίνεται η κατασκευή ενός πρότυπου φίλτρου τύπου \(butterworth\) με την χρήση
της βιβλιοθήκης \(scipy\). Αντίστοιχα παραδείγματα θα προστεθούν για κάθε γράφημα
πρότυπου φίλτρου.

\selectlanguage{english}
#+begin_src jupyter-python :session python3 :async yes :results drawer :exports code
# 4TH ORDER BUTTERWORTH FILTER WITH A GAIN DROP OF 1/sqrt(2)
# AT 0.4 CYCLES/SAMPLE
from scipy import signal
import matplotlib.pyplot as plt
import math
import numpy as np
bb, ab  = signal.butter (4, 0.8, 'low', analog=False,output='ba')
wb, hb = signal.freqz(bb, ab)
wb = wb/(2*math.pi)

plt.plot(wb, abs(np.array(hb)))
plt.title('Butterworth filter frequency response')
plt.xlabel('Frequency [cycles/sample]')
plt.ylabel('Amplitute [dB]')
plt.margins(0, 0.1)
plt.grid(which = 'both', axis='both')
#+end_src

#+RESULTS:
:results:
[[file:./.ob-jupyter/98c295f34315b0f02971668dc65193249a255080.png]]
:end:

#+CAPTION:Butterworth filter frequency response

[[file:./Butterworth Filter Freq Response.png]]


#+begin_src jupyter-python :session python3 :async yes :results drawer :exports code
# 4TH ORDER BESSEL FILTER WITH A GAIN DROP OF 1/sqrt(2)
# AT 0.4 CYCLES/SAMPLE
bb, ab = signal.bessel (4, 0.8, 'low', analog=False, output='ba')
wb, hb = signal.freqz(bb, ab)
wb = wb/(2*math.pi)

plt.plot(wb, abs(np.array(hb)))
plt.title('Bessel filter frequency response')
plt.xlabel('Frequency [cycles/sample]')
plt.ylabel('Amplitute [dB]')
plt.margins(0, 0.1)
plt.grid(which= 'both', axis= 'both')
#+end_src

#+RESULTS:
:results:
[[file:./.ob-jupyter/47597dd876fd4b667b7dacefadc37d6179395293.png]]
:end:

[[file:./Bessel Filter Freq Response.png]]

#+begin_src jupyter-python :session python3 :async yes :results drawer :exports code
#4TH ORDER CHEBYSHEV FILTER TYPE 1 (ONLY IN PASSBAND RIPPLES)
# WITH MAX RIPPLES=2 AND THE GAIN DROP AT 1.5 CYCLES/SAMPLE
bb, ab = signal.cheby1 (4, 2, 0.3, 'low', analog=False, output='ba')
wb, hb = signal.freqz(bb, ab)
wb = wb/(2*math.pi)

plt.plot(wb, abs(np.array(hb)))
plt.title('Chebyshev filter frequency response')
plt.xlabel('Frequency [cycles/sample]')
plt.ylabel('Amplitute [dB]')
plt.margins(0, 0.1)
plt.grid(which= 'both', axis= 'both')
#+end_src

#+RESULTS:
:results:
[[file:./.ob-jupyter/7c09dfb582346e4cb49ed3fc05b279aa521034f2.png]]
:end:

[[file:./Chebyshev Filter Freq Response.png]]

#+begin_src jupyter-python :session python3 :async yes :results drawer :exports code
# 4TH ORDER ELLIPTIC FILTER WITH MAX RIPPLES =2dB IN PASSBAND,
# MIN ATTENUATION =8dB IN STOP BAND AT 0.25 CYCLES/SAMPLE
bb, ab = signal.ellip (4, 2, 8, 0.5, 'low', analog=False, output='ba')
wb, hb = signal.freqz(bb, ab)
wb = wb/(2*math.pi)

plt.plot(wb, abs(np.array(hb)))
plt.title('Elliptic filter frequency response')
plt.xlabel('Frequency [cycles/sample]')
plt.ylabel('Amplitute [dB]')
plt.margins(0, 0.1)
plt.grid(which= 'both', axis= 'both')
#+end_src

#+RESULTS:
:results:
[[file:./.ob-jupyter/16e7ff124636d39cb84dec0dbd1c5a76d6f82f05.png]]
:end:

[[file:./Elliptic Filter Freq Response.png]]

\selectlanguage{greek}
Παρατηρούμε πως όλα τα παραπάνω παραδείγματα εφαρμόζονται για το ίδιο φάσμα
συχνοτήτων, όμως επηρεάζουν τις συχνότητες διέλευσης και κατά συνέπια το
σήμα εξόδου με διαφορετικό τρόπο. Ανάλογα με τις εκάστοτε προϋποθέσεις και
περιορισμούς του συστήματος επεξεργασίας που διαθέτουμε μπορεί να προτιμηθεί
κάποια από τις περιπτώσεις που προαναφέρθηκαν εδώ. Η πολυπλοκότητα και το εύρος
των σημάτων που διαχειριζόμαστε σε βιομηχανικές εγκαταστάσεις αλλά και στην
καθημερινή αλληλεπίδραση με τα τεχνολογικά μέσα έχουν εξειδικεύσει αυτές τις
κατηγορίες περεταίρω, με την χρήση αλγορίθμων βελτιστοποίησης, όμως στο πλαίσιο
της παρούσας εργασίας δεν θα σχολιαστούν τέτοιες μέθοδοι.

* Μεθοδολογία
** Εγκατάσταση εργαστηρίου
    Η εγκατάσταση που χρησιμοποιήθηκε για την συλλογή των δεδομένων
αποτελείται από μία αεροσήραγγα την οποία τροφοδοτεί με σταθερή ταχύτητα
αέρα, ηλεκτροκινητήρας προσδεδεμένος σε έναν έλικα. Στην μέση της
σήραγγας υπάρχει ένα πλέγμα διάχυσης ώστε η ροή του αέρα να γίνεται όσο
το δυνατόν πιο ομοιόμορφα στην έξοδο όπου βρίσκεται και το αισθητήριο
όργανο για την καταγραφή της ταχύτητας του ανέμου. Παρακάτω φαίνεται μια
εικόνα της εγκατάστασης σε σχηματικό διάγραμμα.

#+attr_latex:  :width 420px
#+attr_latex:  :height 250px
#+attr_latex:  :center t
#+ATTR_LATEX: :caption \caption{Θάλαμος ομοιόμορφης παροχής ανέμου στο αισθητήριο όργανο όπου τοποθετείται στο σημείο \textbf{Α}. Στο σημείο  \textbf{\(A_{s}\)}, βρίσκεται ένα πλέγμα διάσπασης της ροής που μας επιτρέπει την ομαλή ταχύτητα στο σημείο εξόδου \textbf{A}.}
[[file:./Wind_Tunnel_setup_lab.png]]
\clearpage
** TODO Μεθοδολογία καταγραφής
** Μεθοδολογία επεξεργασίας
    Ένας λόγος που δεν χρησιμοποιήθηκε επεξεργασία σε πραγματικό χρόνο είναι
ότι η εγκατάσταση που χρησιμοποιήθηκε για την συλλογή των δεδομένων,
κατασκευάστηκε με σκοπό την σύνδεσή του σε κεντρική μονάδα επικοινωνίας,
και έπειτα, πραγματοποιείται σύνδεση μέσω σειριακής θύρας $\en{USB}$ με Η/Υ,
όπου και καταγράφεται το σήμα του αισθητήριου οργάνου ($\en{pitot-tube}$). Ένας
δεύτερος λόγος, ήταν η ανάγκη να δοκιμαστούν διαφορετικές μέθοδοι
αφαίρεσης του θορύβου και προφανώς αυτό θα ήταν πιο δύσκολο εάν έπρεπε
να γίνει σε πραγματικό χρόνο αλλάζοντας τις απαραίτητες παραμέτρους για
την ρύθμιση του φίλτρου. Θα έπρεπε λοιπόν να εγκατασταθεί ανάλογη
συσκευή, όπως ένας μικροεπεξεργαστής, που θα είχε την δυνατότητα για
υψηλές ταχύτητες δειγματοληψίας καθώς η καταγραφή έγινε στα 100 και 500 $\en{kHz}$.
Αυτό θα αύξανε πολύ το κόστος της κατασκευής και θα απαιτούσε
βαθμονόμιση του φίλτρου, για να μην προστεθεί περαιτέρω σφάλμα στην
μέτρηση. Παρακάτω φαίνεται ένα διάγραμμα της συνδεσμολογίας και του τρόπου
καταγραφής του σήματος.
#+NAME: big_graph
#+begin_src dot :file ./flowcharts/test-first.png :results file :exports results :session dot :tangle ./graphviz/lab-struct.gv
digraph regexp  {
    compound=true;
    // graph [fontsize=10 fontname="Verdana" compound=true];
    // node [shape=record fontsize=10 fontname="Verdana"];
    subgraph cluster_0{
        style=filled;
        color=lightgray;
        node [style=filled,color=white];
        "Pitot-tube" -> "H/Y" -> "Αρχείο δεδομένων" -> "Αρχικό σήμα πρoς επεξεργασία";
        label= "Ανάκτηση δεδομένων από αισθητήρα";
    }
    subgraph cluster_1{
        fontcolor="#D4C9AF";
        style=filled;
        color="#285162";
        node [style=filled, color=white];
        // "Περιπτώσεις πειράματος" ->
        // {"Συμπιεσμένος \n αέρας"  "Αεροσύραγκα" } [color=red]
        "Συμπιεσμένος \n αέρας" -> {"5" "10"} [color=forestgreen, style=dashed]
        "Αεροσύραγκα" -> {"5" "10" "15" "20"} [color=magenta, lhead=cluster_2]
        label = "Περιπτώσεις πειράματος";
        // color=blue
        subgraph cluster_2{
            "5" "10" "15" "20";
            label="Ταχύτητες σε m/s"
        }
    }
    "Pitot-tube" -> "Αρχικό σήμα πρoς επεξεργασία" ;
    {"5" "10" "15" "20"} ->
    {"Ανοιχτός Inverter" "Κλειστός Inverter"}[color=magenta]
    {"5" "10" } ->
    {"Ανοιχτός Inverter" "Κλειστός Inverter"}[color=forestgreen, style=dashed]
}
#+end_src
#+attr_latex:  :center t
#+caption: Διάγραμμα ροής για την μέθοδο καταγραφής και τις περιπτώσεις που εξετάστηκαν.
#+RESULTS: big_graph
[[file:./flowcharts/test-first.png]]


Για την επεξεργασία των δεδομένων έπρεπε αρχικά να σιγουρευτούμε πως οι
μετρήσεις δεν υπέφεραν από το φαινόμενο της αλλοίωσης. Έτσι καθίσταται
αναγκαία η εφαρμογή της μεθόδου μείωσης αριθμού δειγμάτων, ώστε να εξεταστεί
το μέγεθος αλλοίωσης του σήματος. Στην συνέχεια έπρεπε να γίνει η μετατροπή
του σήματος στο πεδίο των συχνοτήτων για να αναγνωριστεί το φάσμα συχνοτήτων
που εμπεριέχει τον θόρυβο και να σχεδιαστεί το κατάλληλο φίλτρο. Για τον σκοπό
αυτό εφαρμόστηκε ο ταχύς μετασχηματισμός \(Fourier\) από την βιβλιοθήκη \(numpy\) και
φάνηκε ξεκάθαρα μια περιοχή συχνοτήτων στα σήματα από τα 2000 \(Hz\), επηρεασμένα
από θόρυβο. Εδώ φαίνονται δύο από τα διαγράμματα της ανάλυσης των φίλτρων, που
χρησιμοποιήθηκαν στην σύγκριση των μεθόδων απόρριψης του θορύβου.
#+NAME: comb-pics
#+begin_export latex
\begin{figure}
\centering
\begin{subfigure}{.5\textwidth}
\centering
\includegraphics[width=.8 \linewidth]{./fir-200.png}
\caption{\(F.I.R.\) φίλτρο}
\label{fig:sub1}
\end{subfigure}%
\begin{subfigure}{.5\textwidth}
\centering
\includegraphics[width=.8 \linewidth]{./iir-butter-200.png}
\caption{\(I.I.R.\) φίλτρο}
\label{fig:sub2}
\end{subfigure}
\caption{Διαφορετικά φίλτρα διέλευσης χαμηλών συχνοτήτων}
\label{fig:test}
\end{figure}
#+end_export

Η εύρεση της μέσης τιμής για κάθε στοιχείο του σήματος με την συνάρτηση
\(average()\) για την ανάλυση του σήματος στο πεδίο του
χρόνου. Μας δίνει την πληροφορία της ισχύος του σήματος γύρω από την ενδιάμεση
τιμή, ή αλλιώς *θέση ισορροπίας ταλάντωσης*. Επιπρόσθετα η μέθοδος που
εφαρμόζεται για την εξέταση των φίλτρων και των άλλων διεργασιών που
εφαρμόζονται στο σήμα βασίζεται στην τεχνική του \(Welch\) για την εκτίμηση της
πυκνότητας φάσματος συχνοτήτων.

Έτσι για την εκλογή των συμπερασμάτων, θα παρατεθούν στη συνέχεια διαγράμματα
με το αρχικό σήμα και το επεξεργασμένο στο πεδίο των συχνοτήτων, αφού καθίσταται
ευκολότερο να διακρίνουμε την επιρροή των φίλτρων στο σήμα εξόδου. Όπως έχει
αναφερθεί και παραπάνω, κατά την απόρριψη του μή αποδεκτού θορύβου, τα φίλτρα
εντάσσουν καταστρεπτικές συμπεριφορές στο σύστημα που αν δεν ληφθούν
υπ' όψη ενδέχεται να επηρεάσουν το σήμα εξόδου.

#+NAME: more_in_depth
#+begin_src dot :file ./flowcharts/proc-meth.png :results file :exports results :session dot :tangle ./graphviz/proc-methods.gv

digraph processing {
    newrank=true;
    compound=true;
    // root of operations
    // filt [label="Απομείωση θορυβου"]
    aliasing [label="Έλεγχος \n αλλοίωσης"]
    averg [label="Υπολογισμός \n μέσης τιμής \n σήματος"]

    //clusters for clarity
    subgraph cluster_0{
        fontcolor="#285162";
        style=filled;
        fillcolor="#D4C9AF";
        node[style=filled; color=white];
        fftmethod;
        timedom;
        label="Επεξεργασία σήματος με θόρυβο"

        subgraph cluster_1{
            // fontcolor=red;
            style=filled;
            fillcolor=forestgreen;
            node[style=filled; color=white];
            aliasing;
            averg;
            label= "Αρχική φάση επεξεργασίας"

            subgraph cluster_3{
                avrged;
                decimop;
                label="Μέθοδοι";
            }
        }
        subgraph cluster_2{
            fontcolor="#D4C9AF";
            style=filled;
            fillcolor="#285162";
            node[style=filled; color=white];
            choosfilt;
            filterconst;
            fir;
            iir;
            apply;
            welch;
            filt_type;
            label= "Συχνοτικά φίλτρα";
        }
        subgraph cluster_4{
            graphs -> results [color=forestgreen, style=bold]
            label="Αποτελέσματα"
        }
    }
    {rank=same; fftmethod; timedom;}
    {rank=same; aliasing; averg; choosfilt;}
    {rank=same; graphs; avrged; filt_type;}
    {rank=same; filterconst; decimop;}
    // filter related
    fir [label="FIR"]
    iir [label="IIR"]
    apply [label="Εφαρμογή φίλτρων"]
    filterconst [label="Κατασκευή \n φίλτρων"]
    filt_type [label="Διέλευσης χαμηλών \n συχνοτήτων \n (low-pass)"]

    // aliasing
    decimop [label="Αποδεκατισμός \n ανά 10 και 100 δείγματα \n (decimation)"]
    timedom [label="Πεδίο του χρόνου \n καταγραφή"]

    //general bubbles
    graphs [label="Γραφήματα"]
    fftmethod [label= "Πεδίο συνχότητας \n (fft algorithm)" ]
    choosfilt [label="Επιλογή επιθυμητών \n συχνοτήτων \n(cutoff frequency)"]
    results [label="Σύγκριση μεθόδων"]
    avrged [label="average(signal, fs) \n \n Ανάλογα με την \n συχνότητα \n καταγραφής, fs"]
    welch [label="Μέθοδος Welch \n (Spectral density)"]
    // start the graph at last 🫠
    fftmethod -> timedom -> fftmethod[style=dotted,];
    // filtering path
    choosfilt ->
    filterconst [color=red, style=bold];

    filterconst -> {fir iir} ->
    filt_type ->
    apply ->
    welch ->
    graphs [style=bold, color=red]

    // aliasing path
    timedom ->
    aliasing ->
    decimop ->
    // apply ->
    graphs[color=blueviolet , style=dashed]
    fftmethod ->
    choosfilt[color=red, style=dotted];

    // aliasing path
    timedom ->
    averg ->
    avrged ->
    // apply ->
    graphs [color=magenta, style=dashed, ]

}
#+end_src

# #+attr_latex:  :width 420px
# #+attr_latex:  :height 699px
#+attr_latex:  :center t
#+caption: Μέθοδος ανάλυσης και επεξεργασίας σημάτων για την εκλογή καταλληλότερου φίλτρου διέλευσης χαμηλών συχνοτήτων.
#+RESULTS: more_in_depth
[[file:./flowcharts/proc-meth.png]]

\clearpage
** Μεθοδολογία σύγκρισης
Για να συγκρίνουμε τις δυο διαφορετικές διαδικασίες είναι προφανές ότι δεν
ωφελεί να επικεντρωθούμε στην ταχύτητα έκδοσης αποτελεσμάτων. Θα πρέπει λοιπόν
να εξετάσουμε τις διαστρεβλώσεις σε χαμηλές συχνότητες που εντάσσει η κάθε
κατηγορία, αλλά και τη διαφορά φάσης της εξόδου κάθε διαδικασίας. Εύλογα έχουν
γίνει προσπάθειες για την εξάλειψη της καθυστέρησης που προκύπτει και οι
περισσότερες βιβλιοθήκες με σκοπό την επεξεργασία σημάτων, έχουν λύσει σε
τέτοιο βαθμό το πρόβλημα που σχεδόν δεν απασχολεί τον ερευνητή πέρα από την
επιλογή της κατάλληλης συνάρτησης. Για την επεξεργασία των δεδομένων έχουν ληφθεί
δύο μέτρα προς την κατεύθυνση αυτή. Το πρώτο αφορά την αποφυγή της συνάρτησης
\(lfilter\) που, όπως μπορούμε εύκολα να δείξουμε, εντάσσει μεγάλη διαφορά φάσης
μεταξύ της εξόδου και της εισόδου του συστήματος.

#+CAPTION: Σύγκριση συναρτήσεων εφαρμογής του ίδιου φίλτρου της βιβλιοθήκης \(signal\).
[[file:./bucket/filters/lowpass-filtfilt.png]]

Ο έλεγχος των αποτελεσμάτων γίνεται με την χρήση της τυπικής απόκλισης. Κατά
την εφαρμογή οποιουδήποτε φίλτρου θα πρέπει η τυπική απόκλιση του σήματος να
μειώνεται, λογικό παράγωγο της διαδικασίας καθαρισμού σημάτων από θόρυβο, αφού
η απομάκρυνση από την μέση τιμή θα πρέπει να μειώνεται. Αν η τυπική απόκλιση
αυξάνεται, το σύστημα επηρεάζεται καταστρεπτικά από την διεργασία που
εφαρμόζεται σε αυτό. Παρατηρήθηκε αντίστοιχη συμπεριφορά αυξάνοντας την τάξη
του φίλτρου πέραν του αναγκαίου κατά πολλές τάξεις μεγέθους.
* Αποτελέσματα καταγραφής και επεξεργασίας
** Επεξεργασία δεδομένων ανέμου
Όπως φαίνεται και στο παραπάνω διάγραμμα ροής, για την ικανοποιητική σύγκριση
της επιρροής του φίλτρου στο σήμα που καταγράφηκε από τον αισθητήρα μέτρησης
της ταχύτητας ανέμου, προέχει ο έλεγχος της αλλοίωσης λόγω ανεπαρκούς
συχνότητας καταγραφής της κάρτας ΝΙ (\(Native\ Instruments\)). Ο τρόπος που
επιλέχθηκε εδώ, ήταν η χρήση της τυπικής απόκλισης της κυματομορφής και να
ελεγχθεί η τυχών αύξησή της μετά την επεξεργασία. Από την αρχή μπορούμε να
παρατηρήσουμε πως ο μετασχηματιστής ευθύνεται για τις παρεμβολές,
και είναι εμφανής η αύξηση της τυπικής απόκλισης κατά 2 τάξεις μεγέθους. Επίσης
κατά την διαδικασία βελτιστοποίησης της τάξης του φίλτρου, λόγω βασικών
διαφορών στα \(FIR\) και \(IIR\) συστήματα, χρησιμοποιήθηκε διαφορετική αλλά παρόμοια
τιμή για την τάξη μεγέθους, ώστε να αποφευχθεί η κατασκευή διαγραμμάτων κάθε
φορά που πειραματιζόμασταν με διάφορα χαρακτηριστικά του εκάστοτε φίλτρου.

#+NAME: std_1st
#+begin_src jupyter-python :session python3 :async yes :results replace table :exports results
#%%
# from tabulate import tabulate
table = ([['', 'Συμπιεσμένος αέρας', '', 'Αεροσήραγγα', ''],
          None,
          ["Μετ/στής", "\(\text{\selectlanguage{english}On}\)", "\(\text{\selectlanguage{english}Off}\)", "\(\text{\selectlanguage{english}On}\)", "\(\text{\selectlanguage{english}Off}\)"],
          None,
          ["/", "<", "", "<", ""],
          [f'{dfi_i0_w0.description.replace("Inverter Off,", "").replace("WS", "ταχ.").replace(", 100kHz", "")}'" \(m/s\)",
           "{:.4f}".format(np.std(df_tdms_1_0.data)),
           "{:.4f}".format(np.std(df_tdms_0_0.data)),
           "{:.4f}".format(np.std(dfi_i1_w0.data)),
           "{:.4f}".format(np.std(dfi_i0_w0.data)),
           ],
          [f'{dfi_i1_w5.description.replace("Inverter On,", "").replace("WS", "ταχ.").replace(", 100kHz", "")}'" \(m/s\)",
           "{:.4f}".format(np.std(df_tdms_1_5.data)),
           "{:.4f}".format(np.std(df_tdms_0_5.data)),
           "{:.4f}".format(np.std(dfi_i1_w5.data)),
           "-",
           ],
          [f'{dfi_i1_w10.description.replace("Inverter On,", "").replace("WS", "ταχ.").replace(", 100kHz", "")}'" \(m/s\)",
           "{:.4f}".format(np.std(df_tdms_1_10.data)),
           "{:.4f}".format(np.std(df_tdms_0_10.data)),
           "{:.4f}".format(np.std(dfi_i1_w10.data)),
           "-"],

         [f'{dfi_i1_w15.description.replace("Inverter On,", "").replace("WS", "ταχ.").replace(", 100kHz", "")}'" \(m/s\)",
          "-",
          "-",
          "{:.4f}".format(np.std(dfi_i1_w15.data)),
          "-",
          ],
          [f'{dfi_i1_w20.description.replace("Inverter On,", "").replace("WS", "ταχ.").replace(", 100kHz", "")}'" \(m/s\)",
           "-",
           "-",
           "{:.4f}".format(np.std(dfi_i1_w20.data)),
           "-",
           ],
          ])

# print(tabulate(table))
# print(table)
def dummy (some):
    return some
dummy(table)

#+end_src

#+CAPTION: Πίνακας τυπικής απόκλισης σημάτων καταγεγραμμένα με διαφορετική παροχή ανέμου (συμπιεσμένος και μή).
#+RESULTS: std_1st
|                 | Συμπιεσμένος αέρας                    |                                        |                           Αεροσήραγγα |                                        |
|-----------------+---------------------------------------+----------------------------------------+---------------------------------------+----------------------------------------|
| Μετ/στής        | \(\text{\selectlanguage{english}On}\) | \(\text{\selectlanguage{english}Off}\) | \(\text{\selectlanguage{english}On}\) | \(\text{\selectlanguage{english}Off}\) |
|-----------------+---------------------------------------+----------------------------------------+---------------------------------------+----------------------------------------|
| ταχ.=0 \(m/s\)  | 0.0364                                |                                 0.0062 |                                0.0392 | 0.0076                                 |
| ταχ.=5 \(m/s\)  | 0.0434                                |                                 0.0244 |                                0.0385 | -                                      |
| ταχ.=10 \(m/s\) | 0.0841                                |                                 0.0763 |                                0.0400 | -                                      |
| ταχ.=15 \(m/s\) | -                                     |                                      - |                                0.0421 | -                                      |
| ταχ.=20 \(m/s\) | -                                     |                                      - |                                0.0566 | -                                      |
** Εφαρμογή φίλτρων
Για την παρεμβολή που επηρεάζει το σήμα του αισθητήρα θα εφαρμοστεί ένα φίλτρο
διέλευσης χαμηλών συχνοτήτων. Είμαστε σε θέση να γνωρίζουμε πως οι χαμηλές
συχνότητες του σήματος εμπεριέχουν όλο το ποσό της πληροφορίας που αποτελεί
την μέτρηση. Οι μετρήσεις που καταγράφηκαν για μηδενικές ταχύτητες, με τον
μετασχηματιστή κλειστό και ανοιχτό, χρησιμοποιήθηκαν για να βρεθεί η
ονομαστική τάση του αισθητήρα. Όσο για την επιλογή του κατάλληλου φίλτρου,
ως καταλληλότερα κρίθηκαν το \(butterworth\) από την κατηγορία των \(IIR\) για την
ελάχιστη διαστρέβλωση που αποφέρει κατά την εφαρμογή του στις συχνότητες
διέλευσης. Για την εύκολη σύγκριση των δύο μεθόδων, η έξοδος των φίλτρων
\(FIR\) έπρεπε να μετατραπούν από την μορφή της εξίσωσης μεταφοράς σε δευτέρας
τάξης “κομμάτια” (\(sos\ output\)) της αναπαράστασης της εξίσωσης μεταφοράς που
χαρακτηρίζει το φίλτρο. Για τις κατηγορίες που θα δούμε παρακάτω, οι βασικοί
τύποι των \(FIR\) φίλτρων που θα παρουσιαστούν, αναφέρονται στην ευρύτερη
βιβλιογραφία ως τύπου \(I\) και τύπου \(II\). Η διαφορά είναι πως τα πρώτα παρουσιάζουν
θετική συμμετρία και έχουν τάξη ακέραιου περιττού αριθμού. Τα τύπου \(II\)
εμφανίζουν την ίδια συμμετρία, όμως η τάξη του φίλτρου είναι άρτιος αριθμός.

Υπάρχουν άλλες δύο κατηγορίες που εμφανίζουν αρνητική συμμετρία, όμως η
διαφορά στις τάξεις των φίλτρων τύπου \(III,\ IV\) είναι ανάλογες με των προηγούμενων
δύο τύπων.

Στην παρούσα εργασία ασχοληθήκαμε μόνο με φίλτρα από τους πρώτους 2 τύπους,
όμως αργότερα θα μπορούσαν να ερευνηθούν και περισσότεροι τύποι και
κατηγορίες παραθύρων. Όλες οι παραπάνω κατηγορίες συμπεριλαμβανομένων και
των \(IIR\), στην έξοδό τους, το σήμα παραμορφώνεται εμφανίζοντας διαφορά φάσης
με το σήμα εξόδου. Έτσι, όπως αναφέρθηκε και νωρίτερα στην ενότητα 6.3,
επιλέγοντας την σωστή συνάρτηση από την κατάλληλη βιβλιοθήκη μπορούμε να
μειώσουμε το σφάλμα της αλλοίωσης και την πρόσθεση διαφοράς φάσης, σε
αποδεκτό βαθμό. Στην συνέχεια θα συγκριθούν τα διαγράμματα της πυκνότητας
ισχύος του σήματος με την μέθοδο του \(Welch\), ώστε να εκλεγεί το κατάλληλο
προς εφαρμογή φίλτρο.
** Αποτελέσματα επεξεργασίας
Για κάθε σήμα που καταγράφηκε εφαρμόστηκαν οι δύο από τις τρείς μεθόδους και
φάνηκε πως, ενώ για τα φίλτρα \(IIR\) είχαμε αποδεκτό βαθμό αλλοίωσης, ελέγχοντας την τυπική απόκλιση του σήματος εξόδου με εκείνη της εισόδου, τα \(FIR\)
φίλτρα παρέχουν καλύτερα αποτελέσματα. Ο τύπος του θορύβου που επηρεάζει το
σήμα του αισθητήρα, εμφανίζεται κυρίως σε συχνότητες που καταλαμβάνουν
ηλεκτρομαγνητικά κύματα ξεκινώντας από την περιοχή των 10-100 \(kHz\).
Καταγράφηκαν και σήματα με συχνότητα δειγματοληψίας 500 \(kHz\) και ο θόρυβος
παραμένει, επομένως κρίθηκε πως πρόκειται για παρεμβολή μεγαλύτερης συχνότητας
από τις δυνατότητες καταγραφής του συστήματος που διαθέτουμε.
*** Απομείωση θορύβου
Για την επιλογή του κατάλληλου φίλτρου εξετάστηκαν οι δύο βασικές
κατηγορίες, συγκρίνοντας την τιμή της τυπικής απόκλισης του σήματος, πριν
και μετά την εφαρμογή.  Από τους σημαντικότερους παράγοντες
που επηρεάζουν τον χρόνο υπολογισμού στα φίλτρα είναι η τάξη τους, δηλαδή
το πλήθος των συντελεστών του πολυωνύμου που θα κατασκευαστεί από τον
εκάστοτε αλγόριθμο. Όπως θα δειχθεί και στη συνέχεια, τα φίλτρα \(IIR\), ενώ
αποδίδουν καλύτερα στην απομείωση του θορύβου με μικρότερης τάξης φίλτρα
από τα \(FIR\), απαιτούν μεγαλύτερη υπολογιστική ισχύ λόγω της αναδρομικής
συμπεριφοράς τους. Στην πράξη ανάλογα με την συχνότητα καταγραφής και
την διάρκεια του σήματος, δηλαδή την ποσότητα των στοιχείων που εκφράζουν
το διακριτό σήμα προς επεξεργασία, επιλέγεται και μια από τις βασικές
κατηγορίες. Εδώ εξετάστηκαν και οι δύο μέθοδοι με σήματα διάρκειας περίπου
επτά δευτερόλεπτα σε συχνότητες καταγραφής 500 και 100 \(kHz\). Η πηγή του
ανέμου από το καλώδιο πεπιεσμένου αέρα καταγράφηκε με συχνότητα 500 \(kHz\),
ενώ του ανεμιστήρα της αεροσήραγγας (*\(ventilator\)*) στα 100 \(kHz\).

#+CAPTION: Διάγραμμα απεικόνισης σήματος στα πεδία χρόνου και συχνότητας εφαρμόζοντας ένα απλό \(butterworth\) φίλτρο διέλευσης χαμηλών συχνοτήτων.
#+attr_latex: :width 450px :height 480px
[[file:./src/sign_overview/butterworth_IIR_low_pass_2000_Hz_Inverter_on_WS_0_.jpg]]

Όπως θα γίνει αντιληπτό στη συνέχεια, η διαδικασία παραγωγής των αποτελεσμάτων
αποτέλεσε το μικρότερο μέρος της εργασίας. Σημαντικό ήταν να καθοριστεί ο
τρόπος και οι μέθοδοι που θα χρησιμοποιηθούν και έπειτα να εφαρμοστούν
σωστά. Τέλος, θα δειχθεί πως και οι δύο μέθοδοι είναι αποδεκτοί για την
συγκεκριμένη εφαρμογή, υπό προϋποθέσεις που θα συζητηθούν στα συμπεράσματα.
\clearpage
*** Διαγράμματα πυκνότητας ισχύος εισόδου και εξόδου φίλτρων
Η βασική ανάλυση των σημάτων γίνεται στο πεδίο των συχνοτήτων και κυρίως
μέσω της πολυαναφερόμενης μέχρι στιγμής μεθόδου \(Welch\). Αυτό συμβαίνει
καθώς απεικονίζοντας το σήμα στο πεδίο του χρόνου, εκτός της μεταβολής της
ισχύος του σήματος (αν αυτή απεικονίζεται), δεν μπορούμε να καθορίσουμε
τυχών θορυβώδη φάσματα συχνοτήτων. Έτσι πρώτο βήμα είναι να αποτυπωθεί το
φάσμα που επηρεάζει τις χαμηλές συχνότητες, όπου και καταγράφεται η
πληροφορία από τον αισθητήρα. Στις περισσότερες συσκευές οι συχνότητες
που ξεπερνούν τα \(2-5\ kHz\), είτε αναφέρονται σε σήμα ήχου ή/και εικόνας,
είτε αποτελούν θόρυβο από το περιβάλλον πέραν εξαιρέσεων. Στην περίπτωση
που εξετάστηκε στο εργαστήριο, κρίθηκε πως μετά τα \(2\ kHz\), το σήμα δεν
περιείχε “ουσιώδη” πληροφορία. Έτσι τα φίλτρα που εφαρμόστηκαν ήταν διέλευσης
χαμηλών συχνοτήτων από \(100-2000\ Hz\).  Στα παρακάτω διαγράμματα σημειώνεται
με μπλε διακεκομμένη γραμμή.

Θα φανεί από τα πρώτα διαγράμματα πως τα \(FIR\) συστήματα παρουσιάζουν πολύ
πιο απότομη κλίση. Αυτό συμβαίνει καθώς ο κύριος παράγοντας που την επηρεάζει,
είναι η τάξη του φίλτρου. Όμως ταυτόχρονα αυξάνεται και η ταχύτητα υπολογισμού
αφού δεν καλείται αναδρομικά η έξοδος του φίλτρου όπως έχει σημειωθεί στην
ενότητα των φίλτρων. Κατά την εφαρμογή των δύο μεθόδων θα διαπιστώσουμε πως τα
αποτελέσματα αποκλίνουν σε πολύ μικρό βαθμό συγκρίνοντας τις τυπικές
αποκλίσεις των εξόδων σχετικά με την είσοδο των φίλτρων.

#+NAME: fc1_5
#+begin_src jupyter-python :session python3 :async no :exports results
from pros_noisefiltering.plotting_funcs import plot_comparative_response
from pros_noisefiltering.filters.iir import filt_butter_factory

butter_filter_2000 = filt_butter_factory(filt_order=4, fc_Hz=2000)
ca1_5 = df_tdms_1_5
ca1_10 = df_tdms_1_10

plot_comparative_response(ca1_5,
                          filter_func=fir_2000,
                          response_offset=2e-4,
                          Kolmogorov_offset=None,
                          nperseg=NPERSEG,
                          figsize=(10, 5))
#+end_src
#+CAPTION: Διάγραμμα πεπιεσμένου αέρα για ταχύτητα ανέμου 5 \(m/s\) για φίλτρο \(FIR\).
#+LABEL: fc1_5
#+RESULTS: fc1_5
[[file:./.ob-jupyter/4d217fb5b5d7112db00e353a8ae3d377ddb25b64.png]]

#+NAME: fc1_10
#+begin_src jupyter-python :session python3 :async no :exports results
plot_comparative_response(ca1_10,
                          filter_func=fir_2000,
                          response_offset=2e-4,
                          Kolmogorov_offset=None,
                          nperseg=NPERSEG,
                          figsize=(10, 5))

#+end_src

#+CAPTION: Διάγραμμα πεπιεσμένου αέρα για ταχύτητα ανέμου 10 \(m/s\) για φίλτρο \(FIR\).
#+LABEL: fc1_10
#+RESULTS: fc1_10
[[file:./.ob-jupyter/294e2b0de495d2c0d7a266bb3aecffcb47402d72.png]]

#+NAME: ic1_5
#+begin_src jupyter-python :session python3 :async no :exports results
plot_comparative_response(ca1_5,
                          filter_func=butter_filter_2000,
                          response_offset=2e-4,
                          Kolmogorov_offset=None,
                          nperseg=NPERSEG,
                          figsize=(10, 5))
#+end_src
#+CAPTION: Διάγραμμα πεπιεσμένου αέρα για ταχύτητα ανέμου 5 \(m/s\) για φίλτρο \(IIR\).
#+LABEL: ic1_5
#+RESULTS: ic1_5
[[file:./.ob-jupyter/4b6aff0c6fa0a0fbfb0488e22491fb06d6fca2ad.png]]

#+NAME: ic1_10
#+begin_src jupyter-python :session python3 :async no :exports results
plot_comparative_response(ca1_10,
                          filter_func=butter_filter_2000,
                          response_offset=2e-4,
                          Kolmogorov_offset=None,
                          nperseg=NPERSEG,
                          figsize=(10, 5))
#+end_src
#+CAPTION: Διάγραμμα πεπιεσμένου αέρα για ταχύτητα ανέμου 10 \(m/s\) για φίλτρο \(IIR\).
#+LABEL: ic1_10
#+RESULTS: ic1_10
[[file:./.ob-jupyter/c34b7dee44c32c6c845e4455ee13a918a4bc7264.png]]
\clearpage

Εδώ θα παρατηρήσει κανείς πως ο θόρυβος είναι λιγότερο εμφανής από τα
προηγούμενα διαγράμματα. Αυτό συμβαίνει λόγω της χαμηλότερης συχνότητας
καταγραφής στην περίπτωση της αεροσήραγγας. Όπως αναγράφεται και στους
τίτλους των διαγραμμάτων, τα παρακάτω σήματα καταγράφηκαν με συχνότητα
\(100\ kHz\). Έτσι λόγω του θεωρήματος \(Niquist\) το μέγιστο φάσμα που
μπορούμε να απεικονίσουμε υποχωρεί από τα \(250\ kHz\), του πειράματος με
τον πεπιεσμένο αέρα, στα \(50\ kHz\). Επιλέξαμε την μείωση αυτή, για
λόγους πειραματισμού καθώς η μείωση του αριθμού των δειγμάτων, προσφέρει
ταχύτερη επεξεργασία.
#+NAME: fi1_w5
#+begin_src jupyter-python :session python3 :async no :exports results
plot_comparative_response(dfi_i1_w5,
                          filter_func=fir_2000,
                          response_offset=2e-4,
                          Kolmogorov_offset=None,
                          nperseg=NPERSEG,
                          xlim=(1e0, 1e5),
                          figsize=(8, 4))
#+end_src
#+CAPTION: Σήμα αεροσήραγγας για ταχύτητα ανέμου 5 \(m/s\) για φίλτρο \(FIR\).
#+LABEL: fi1_5
#+RESULTS: fi1_w5
[[file:./.ob-jupyter/2fe0b198366f04719a159a8a5d36f40dcb3caab5.png]]

#+NAME: fi1_w10
#+begin_src jupyter-python :session python3 :async no :exports results
plot_comparative_response(dfi_i1_w10,
                          filter_func=fir_2000,
                          response_offset=2e-4,
                          Kolmogorov_offset=None,
                          nperseg=NPERSEG,
                          xlim=(1e0, 1e5),
                          figsize=(8, 4))
#+end_src
#+CAPTION: Σήμα αεροσήραγγας για ταχύτητα ανέμου 10 \(m/s\) για φίλτρο \(FIR\).
#+LABEL: fi1_10
#+RESULTS: fi1_w10
[[file:./.ob-jupyter/b57b442290fe1e467ac03de87e4a39d8515e7041.png]]

#+NAME: fi1_w15
#+begin_src jupyter-python :session python3 :async no :exports results
plot_comparative_response(dfi_i1_w15,
                          filter_func=fir_2000,
                          response_offset=2e-4,
                          Kolmogorov_offset=None,
                          nperseg=NPERSEG,
                          xlim=(1e0, 1e5),
                          figsize=(8, 4))
#+end_src

#+CAPTION: Σήμα αεροσήραγγας για ταχύτητα ανέμου 15 \(m/s\) για φίλτρο \(FIR\).
#+LABEL: fi1_15
#+RESULTS: fi1_w15
[[file:./.ob-jupyter/bbd51ae22a1a7838c2ea6160809020426399930c.png]]

#+NAME: fi1_w20
#+begin_src jupyter-python :session python3 :async no :exports results
plot_comparative_response(dfi_i1_w20,
                          filter_func=fir_2000,
                          response_offset=2e-4,
                          Kolmogorov_offset=None,
                          nperseg=NPERSEG,
                          xlim=(1e0, 1e5),
                          figsize=(8, 4))
#+end_src

#+CAPTION: Σήμα αεροσήραγγας για ταχύτητα ανέμου 20 \(m/s\) για φίλτρο \(FIR\).
#+LABEL: fi1_w20
#+RESULTS: fi1_w20
[[file:./.ob-jupyter/3366e731fbbde2d4c34a56fe8bc43da12fb567ae.png]]

#+NAME: ii1_w5
#+begin_src jupyter-python :session python3 :async no :exports results
plot_comparative_response(dfi_i1_w5,
                          filter_func=butter_filter_2000,
                          response_offset=2e-4,
                          Kolmogorov_offset=None,
                          nperseg=NPERSEG,
                          xlim=(1e0, 1e5),
                          figsize=(8, 4))
#+end_src
#+CAPTION: Σήμα αεροσήραγγας για ταχύτητα ανέμου 5 \(m/s\) για φίλτρο \(IIR\).
#+LABEL: ii1_w5
#+RESULTS: ii1_w5
[[file:./.ob-jupyter/7504ee1b2a40cd7f532bacb4462e38413dd0092f.png]]

#+NAME: ii1_w10
#+begin_src jupyter-python :session python3 :async no :exports results
plot_comparative_response(dfi_i1_w10,
                          filter_func=butter_filter_2000,
                          response_offset=2e-4,
                          Kolmogorov_offset=None,
                          nperseg=NPERSEG,
                          xlim=(1e0, 1e5),
                          figsize=(8, 4))
#+end_src
#+CAPTION: Σήμα αεροσήραγγας για ταχύτητα ανέμου 10 \(m/s\) για φίλτρο \(IIR\).
#+LABEL: ii1_w10
#+RESULTS: ii1_w10
[[file:./.ob-jupyter/b34f9aaabccf6ea38bb0f9de30da8c1bb1b0b70b.png]]

#+NAME: ii1_w15
#+begin_src jupyter-python :session python3 :async no :exports results
plot_comparative_response(dfi_i1_w15,
                          filter_func=butter_filter_2000,
                          response_offset=2e-4,
                          Kolmogorov_offset=None,
                          nperseg=NPERSEG,
                          xlim=(1e0, 1e5),
                          figsize=(8, 4))
#+end_src
#+CAPTION: Σήμα αεροσήραγγας για ταχύτητα ανέμου 15 \(m/s\) για φίλτρο \(IIR\).
#+LABEL: ii1_w15
#+RESULTS: ii1_w15
[[file:./.ob-jupyter/8e6e3969fad13ef2daee327a0e8d1236a38d9b95.png]]

#+NAME: ii1_w20
#+begin_src jupyter-python :session python3 :async no  :exports results
plot_comparative_response(dfi_i1_w20,
                          filter_func=butter_filter_2000,
                          response_offset=2e-4,
                          Kolmogorov_offset=None,
                          nperseg=NPERSEG,
                          xlim=(1e0, 1e5),
                          figsize=(8, 4))
#+end_src
#+CAPTION: Σήμα αεροσήραγγας για ταχύτητα ανέμου 20 \(m/s\) για φίλτρο \(IIR\).
#+LABEL: ii1_w20
#+RESULTS: ii1_w20
[[file:./.ob-jupyter/54705a03fc7393cab8d1ac85fdde21f9cb744dc1.png]]
\clearpage
*** notes :noexport:
- [X] *Εδώ πρέπει να μπουν διαγράμματα από \(filters\ and\ welch\)*
- [X] *Να φέρω τα αναγκαία εδώ σε \(code\ blocks\)*
- [X] Τα έχω ήδη από τα τους φακέλους με τα φίλτρα
- [X] Να τσεκαριστούν για να είμαι σίγουρος
* Σύκγριση αποτελεσμάτων
** Επιρροή μετασχηματιστή στον αισθητήρα
Όπως θα γίνει αντιληπτό παρακάτω, απεικονίζοντας τις μετρήσεις για τον
μετασχηματιστή ανοιχτό και κλειστό σε αντίστοιχες ταχύτητες ανέμου, μπορούμε
να συμπεράνουμε δύο βασικά χαρακτηριστικά. Το πρώτο αναφέρεται στο εύρος των
συχνοτήτων που επηρεάζονται. Καθώς μειώνεται η συχνότητα καταγραφής, ο θόρυβος
των ηλεκτρομαγνητικών κυμάτων μεταφέρεται από τις χαμηλές προς τις υψηλές
συχνότητες. Αιτία του συγκεκριμένου φαινομένου είναι το όριο της συχνότητας
που προσφέρει το καταγραφικό σύστημα της εγκατάστασης. Λογικά το εύρος
συχνοτήτων που καλύπτει ο θόρυβος βρίσκεται σε μεγαλύτερες συχνότητες και
επηρεάζεται από αλλοίωση, αφού η συχνότητα καταγραφής είναι μικρότερη εκείνης
του θορύβου.
#+NAME: fig:invOpenZero
#+begin_src jupyter-python :session python3 :results figure :exports results
NPERSEG=1024<<6
FIGSIZE = (10, 5)
medec = 100

plot_spect_comb2([
    df_tdms_1_0.set_desc('500 kHz (inverter On)').calc_spectrum(nperseg=NPERSEG, scaling='density'),
    df_tdms_0_0.set_desc('500 kHz (inverter Off)').calc_spectrum(nperseg=NPERSEG, scaling='density'),
    # dec_5kHz.set_desc('5 kHz origin').calc_spectrum(nperseg=NPERSEG/100, scaling='density')
],
                 title='Σημάτα αισθητήρα για μηδενική ταχύτητα ανέμου με τον μετ/στή ανοιχτό και κλειστό.',
                 xlim=[1e0,3e5], ylim = [1e-6,0.5e-2],
                 figsize = FIGSIZE,
                 # draw_lines=True,
                 # alpha=0.2,
                 markersize=0.6,
                 )
# plt.savefig(f'./500khz_raw_on_off.png',facecolor='white', transparent=False)
# plt.savefig(f'./100khz_raw_on_off.png',facecolor='white', transparent=False)
#+end_src

#+CAPTION: Σύγκριση σήματος για μηδενική ταχύτητα και τον μετ/στή ανοιχτό και κλειστό καταγεγραμμένο στα \selectlanguage{english}\text{500\ kHz}\selectlanguage{greek}.
#+NAME: fig:invOpenZero
#+RESULTS: fig:invOpenZero
[[file:./.ob-jupyter/40faed2780e08fbba7a08055f5e4f70b69b2152d.png]]

#+NAME: fig:invOpenZero100Ref
#+begin_src jupyter-python :session python3 :results figure :exports results
plot_spect_comb2([
    dfi_i1_w0.set_desc('100 kHz (inverter On)').calc_spectrum(nperseg=NPERSEG/5, scaling='density'),
    dfi_i0_w0.set_desc('100 kHz (inverter Off)').calc_spectrum(nperseg=NPERSEG/5, scaling='density'),],
                 title='Σημάτα αισθητήρα για μηδενική ταχύτητα ανέμου με τον μετ/στή ανοιχτό και κλειστό.',
                 xlim=[1e0,3e5], ylim = [1e-6,0.5e-2],
                 figsize = FIGSIZE,
                 # draw_lines=True,
                 # alpha=0.2,
                 markersize=0.6,
                 )
#+end_src

#+CAPTION: Σύγκριση σήματος για μηδενική ταχύτητα και τον μετ/στή ανοιχτό και κλειστό καταγεγραμμένο στα \selectlanguage{english}\text{100\ kHz}\selectlanguage{greek}.
#+NAME: fig:invOpenZero100Ref
#+RESULTS: fig:invOpenZero100Ref
[[file:./.ob-jupyter/8d88979c589d124e2b6a84c0b11aeb3b9a120aeb.png]]

#+NAME: fig:invOpenTen
#+begin_src jupyter-python :session python3 :results figure :exports results
NPERSEG=1024<<6
FIGSIZE = (10, 5)
medec = 100

plot_spect_comb2([
    df_tdms_0_10.set_desc('500 kHz origin').calc_spectrum(nperseg=NPERSEG, scaling='density'),
    df_tdms_1_10.set_desc('500 kHz (inverter On)').calc_spectrum(nperseg=NPERSEG, scaling='density'),
    # dfi_i1_w10.set_desc('100 kHz (inverter On)').calc_spectrum(nperseg=NPERSEG/5, scaling='density'),
    # dec_5kHz.set_desc('5 kHz origin').calc_spectrum(nperseg=NPERSEG/100, scaling='density')
],
                 title='Σημάτα αισθητήρα για ταχύτητα ανέμου (10 m/s) με τον μετ/στή ανοιχτό και κλειστό.',
                 xlim=[8e0,3e5], ylim = [1e-6,0.5e-1],
                 figsize = FIGSIZE,
                 draw_lines=True,
                 # alpha=0.2,
                 # markersize=0.8,
                 )

#+end_src

Στις εικόνες [[fig:invOpenZero]] και [[fig:invOpenZero100Ref]] φαίνεται ο θόρυβος να μεταφέρεται από τα
\selectlanguage{english}\text{10-100\ kHz}\selectlanguage{greek}
στα \selectlanguage{english}\text{1-10\ kHz}\selectlanguage{greek}. Στο επόμενο
διάγραμμα ([[fig:invOpenTenRef]]) φαίνεται η αύξηση της ισχύος του σήματος όταν ο
μετασχηματιστής είναι ανοιχτός. Πίο συγκεκριμένα παρατηρείται, μικρή αύξηση
της έντασης στην περιοχή των \selectlanguage{english}\text{200-800\ Hz}\selectlanguage{greek}
με την έντονη αύξηση να παρουσιάζεται μετά τα \selectlanguage{english}\text{2-3\ kHz}
\selectlanguage{greek}. Η διαφορά αυτή είναι ξεκάθαρη στο


#+CAPTION: Σύγκριση σήματος για ταχύτητα 10 \(\selectlanguage{english}\text{m/s}\selectlanguage{greek}\) και τον μετ/στή ανοιχτό και κλειστό.
#+NAME: fig:invOpenTenRef
#+RESULTS: fig:invOpenTen
[[file:./.ob-jupyter/861dcda7acfeab2e9480641242a98d00cd115866.png]]

Εδω πρεπει να μιλησω για διαφορα... σε λιγο όμως...

#+NAME: fig:sfreqComp
#+begin_src jupyter-python :session python3 :results figure :exports results

plot_spect_comb2([ca1_0.set_desc('500 kHz').calc_spectrum( nperseg=NPERSEG),
                  dec_50kHz.set_desc('50 kHz').calc_spectrum( nperseg=NPERSEG/10),
                  dec_5kHz.set_desc('5 kHz').calc_spectrum( nperseg=NPERSEG/100)
                  ],
                 title='Σύγκριση σημάτων με διαφορετικές συχνότητες καταγραφής για μηδενική ταχύτητα',
                 xlim=[1e1,3.5e5], ylim = [1e-5,0.5e-2],
                 figsize = (10, 5),
                 draw_lines=True
                 )

#+end_src

#+CAPTION: Σύγκριση σήματος σε διαφορετικές συχνότητες καταγραφής με τον μετασχηματιστή ανοιχτό και μηδενική ταχύτητα ανέμου.
#+RESULTS: fig:sfreqComp
[[file:./.ob-jupyter/2a1fa5fb4ca167197da6ec7ce5d20eda33057ad9.png]]
\clearpage
** Αποδεκατισμός σήματος
<<sec:decimation-chapter>>
Η τεχνική του αποδεκατισμού εφαρμόστηκε κυρίως στην αρχή της επεξεργασίας
για να ελεγχθεί η διαδικασία καταγραφής. Κατέστη αναγκαίο να μπορέσουμε
να διασταυρώσουμε τον βαθμό, που το αρχικό σήμα υπέστη αλλοίωση από την
καταγραφή του. Επίσης σημαντικό ήταν να διασφαλιστεί πως κάθε μέθοδος
απόρριψης συχνοτήτων, θα μπορούσε να εφαρμοστεί σε μειωμένο αριθμό
δειγμάτων. Λόγω υψηλής συχνότητας καταγραφής μετά τα δέκα δευτερόλεπτα
διάρκειας σήματος, για την ολοκλήρωση των διαδικασιών που εφαρμόζονται, θα
χρειαζόμασταν πολύ χρόνο. Στα παρακάτω διαγράμματα αποτυπώνεται ο τρόπος
που επηρεάζει το σήμα η διαδικασία αυτή.
*** Directories :noexport:
- [X] *Εδώ πρεπει να μπουν διαγράμματα απο \(decimation\)*
- [X] Να πω και μερικά πραγματα μαζι με τα αποτελέσματα.
- [X] Έχω ήδη κάποια από τα αρχεία για το paper
- [X] Να τσεκαριστούν για να είμαι σίγουρος
#+begin_src jupyter-python :session python3 :async yes :results raw drawer :exports code
#%%

ca_meas_dir = FOLDER_FOR_DATA / 'compressed air'

data_CA_inv_1_WS_0 = 'ca1_0.1'
# contains the following channels
# [<TdmsChannel with path /'Wind Measurement'/'Torque'>,
#  <TdmsChannel with path /'Wind Measurement'/'Drag'>,
#  <TdmsChannel with path /'Wind Measurement'/'Wind1'>,
#  <TdmsChannel with path /'Wind Measurement'/'Wind2'>]

path_ca_meas = ca_meas_dir / f'{data_CA_inv_1_WS_0}' / TDMS_FNAME

tdms_raw_WT =TdmsFile(path_ca_meas)

ca1_0 = WT_NoiseChannelProc.from_tdms(tdms_raw_WT[GROUP_NAME][CHAN_NAME]
                , desc= 'Inverter On, WS=0, 500kHz')
#%%


# Decimation folder measurments
dec_meas_dir = FOLDER_FOR_DATA / 'Decimation'
dec_at_50_kHz = 'de50.1'
dec_at_5_kHz = 'de5.1'
path_dec_meas_50_kHz = dec_meas_dir / f'{dec_at_50_kHz}' / TDMS_FNAME

path_dec_meas_5_kHz = FOLDER_FOR_DATA / dec_meas_dir / f'{dec_at_5_kHz}' / TDMS_FNAME

tdms_raw_WT_50kHz =TdmsFile(path_dec_meas_50_kHz)
tdms_raw_WT_5kHz =TdmsFile(path_dec_meas_5_kHz)


dec_50kHz = WT_NoiseChannelProc.from_tdms(tdms_raw_WT_50kHz[GROUP_NAME][CHAN_NAME]
                , desc= 'Inverter On, WS=0, 50kHz')
dec_5kHz = WT_NoiseChannelProc.from_tdms(tdms_raw_WT_5kHz[GROUP_NAME][CHAN_NAME]
                , desc= 'Inverter On, WS=0, 5kHz')


#+end_src

#+RESULTS:
:results:
:end:
*** *Διαγράμματα αποδεκατισμού με και χωρίς αλλοίωση στο πεδίο των συχνοτήτων*
#+begin_src jupyter-python :session python3 :async yes :results figure :exports none
from scipy import signal
import matplotlib.pyplot as plt
NPERSEG=1024<<6
FIGSIZE = (10, 5)
medec = 100

# print(len(ca1_0.decimate(dec=medec, offset=0).data))
y = signal.decimate(ca1_0.data, medec, ftype='fir')
z, f = signal.welch(y,
                    fs=ca1_0.fs_Hz/medec,
                    window='flattop',
                    nperseg=NPERSEG/medec,
                    scaling='density')
# print(len(y))
sign = Graph_data_container(x=z,
                            y=f,
                            label="dec factor 100")

plot_spect_comb2([
    ca1_0.decimate(dec=1,offset=0).set_desc('500 kHz origin').calc_spectrum( nperseg=NPERSEG, scaling='density'),
    ca1_0.decimate(dec=medec,offset=0).set_desc('5 kHz (dec=100)').calc_spectrum( nperseg=NPERSEG/medec, scaling='density'),
    dec_5kHz.set_desc('5 kHz origin').calc_spectrum(nperseg=NPERSEG/100, scaling='density')
],
                 title='Αποδεκατισμός σήματος χωρίς επεξεργασία κατά της αλλοίωσης',
                 xlim=[1e0,1e6], ylim = [1e-5,0.5e-2],
                 figsize = FIGSIZE,
                 draw_lines=True
                 )
plt.savefig(f'./decimation/with_aliasing.png',facecolor='white', transparent=False)
plot_spect_comb2([
    ca1_0.decimate(dec=1,offset=0).set_desc('500 kHz origin').calc_spectrum( nperseg=NPERSEG/1, scaling='density'),
    sign,
    dec_5kHz.set_desc('5 kHz origin').calc_spectrum(nperseg=NPERSEG/100, scaling='density')
],
                 title='Αποδεκατισμός σήματος με φίλτρο κατά της αλλοίωσης',
                 xlim=[1e0,1e6], ylim = [1e-5,0.5e-2],
                 figsize = FIGSIZE,
                 draw_lines=True
                 )
plt.savefig(f'./decimation/anti_aliasing_fir.png',facecolor='white', transparent=False)
#+end_src
#+RESULTS:
:RESULTS:
[[file:./.ob-jupyter/70e7c52ead4cae9bf29cb4414ae8226698b16782.png]]
[[file:./.ob-jupyter/c1b4f267ec74d607df908d087422ee163ef47ccd.png]]
:END:

#+attr_latex: :width 500px :height 280px
#+CAPTION: Αποδεκατισμός σήματος χωρίς επεξεργασία κατά της αλλοίωσης για το σήμα του πεπιεσμένου αέρα με ταχύτητα ανέμου 0 \(m/s\) και μετ/στή ανοιχτό.
#+NAME: fig:with_al
[[file:./decimation/with_aliasing.png]]

#+attr_latex: :width 500px :height 280px
#+CAPTION: Αποδεκατισμός σήματος με φίλτρο \(FIR\) κατά της αλλοίωσης για το σήμα του πεπιεσμένου αέρα σε ταχύτητα ανέμου 0 \(m/s\) και μετ/στή ανοιχτό.
#+NAME: without_al
[[file:./decimation/anti_aliasing_fir.png]]

Όπως φαίνεται και παρακάτω, η διαδικασία της μείωσης του αριθμού των
δειγμάτων μπορεί να εντάξει αλλοίωση σε αρχικά “καθαρό” σήμα. Για να
μπορέσουμε να εφαρμόσουμε σωστά την συγκεκριμένη τεχνική, χρησιμοποιώντας
και κάποιο φίλτρο για την διόρθωση της αλλοίωσης, υπάρχουν πολλές μέθοδοι,
ήδη στις βιβλιοθήκες που χρησιμοποιήθηκαν για την ανάλυση των σημάτων.

#+begin_src jupyter-python :session python3 :async yes :results raw drawer :exports results
#%%
from tabulate import SEPARATING_LINE
NPERSEG=1024<<6
FIGSIZE = (15,10)
medec = 100

# print(len(ca1_0.decimate(dec=medec, offset=0).data))
y = signal.decimate(ca1_0.data, medec, ftype='fir')
z, f = signal.welch(y,
                    fs=ca1_0.fs_Hz/medec,
                    window='flattop',
                    nperseg=NPERSEG/medec,
                    scaling='density')
# print(len(y))
sign = Graph_data_container(x=z,
                            y=f,
                            label="dec factor 100")

tablexydec=[None,
            ["Αριθμός δειγμάτων",
             "χωρίς αποδεκατισμό",
             "ανά 10 ",
             "ανά 100 "],
            None,
            ["Συχνοτήτων (χ άξονας)",
             len(ca1_0.decimate(dec=1, offset=0).calc_spectrum( nperseg=NPERSEG).x),
             len(ca1_0.decimate(dec=10, offset=0).calc_spectrum( nperseg=NPERSEG/10).x),
             len(ca1_0.decimate(dec=100, offset=0).calc_spectrum( nperseg=NPERSEG/100).x)
             ],
            # None,
            ["Ισχύος (ψ άξονας)",
             len(ca1_0.decimate(dec=1, offset=0).calc_spectrum( nperseg=NPERSEG).y),
             len(ca1_0.decimate(dec=10, offset=0).calc_spectrum( nperseg=NPERSEG/10).y),
             len(ca1_0.decimate(dec=100, offset=0).calc_spectrum( nperseg=NPERSEG/100).y)
             ]]

tablexyrec=[["Αριθμός δειγμάτων ",
             "50 \(kHz\)",
             "5 \(kHz\)"],
            None,
            ["Συχνοτήτων (χ άξονας)",
             len(dec_50kHz.calc_spectrum(nperseg=NPERSEG/10).x),
             len(dec_5kHz.calc_spectrum(nperseg=NPERSEG/100).x),
             ],
            # SEPARATING_LINE,
            ["Ισχύος (ψ άξονας)",
             len(dec_50kHz.calc_spectrum(nperseg=NPERSEG/10).y),
             len(dec_5kHz.calc_spectrum(nperseg=NPERSEG/100).y),
             ]]

tablexysign=[["Αριθμός δειγμάτων ",
              "5 \(kHz\)"],
             None,
             None,
             ["Συχνοτήτων (χ άξονας)",
              len(sign.x),
              ],
             # SEPARATING_LINE,
             ["Ισχύος (ψ άξονας)",
              len(sign.y),
              ]]
             #+end_src

#+RESULTS:
:results:
:end:
*** *Πίνακες επαλήθευσης μεθόδων στο πεδίο των συχνοτήτων*

Όπως φαίνεται παρακάτω, ο αριθμός των δειγμάτων καθώς
εφαρμόζουμε την μέθοδο του αποδεκατισμού παραμένει σταθερός, γεγονός που
καθορίζει την ορθότητα της εφαρμογής. Ο αριθμός δειγμάτων που παρατίθεται
μετρήθηκε μετά τον υπολογισμό της πυκνότητας ισχύος του σήματος και μόνο
για την ταχύτητα αναφοράς (0 \(m/s\)) του πεπιεσμένου αέρα. Η επιλογή
ήταν σκόπιμη, καθώς στα 500 \(kHz\) εμπεριέχεται ο μεγαλύτερος αριθμός
δειγμάτων. Έτσι έχουμε την δυνατότητα να υποστηρίξουμε ότι, αφαιρώντας
δείγματα από το σήμα δεν διαφοροποιείται το αποτέλεσμα σχετικά με την
καταγραφή του σε αντίστοιχη συχνότητα καταγραφής. Αυτό αντικατοπτρίζεται
συγκρίνοντας τους πίνακες [[some_ref]], [[rec_low_fs_ref]] και [[dec_fir_ref]]. Στους
δύο πρώτους φαίνεται πως η μείωση των δειγμάτων αποφέρει όμοιο σήμα με
καταγραφή σε εφάμιλλη συχνότητα.

#+ATTR_LATEX: :placement [t] :center t :booktabs t :width \textwidth :align X[1lm]X[2lm]
#+NAME: some
#+begin_src jupyter-python :session python3 :async yes :exports results :results replace table
dummy(tablexydec)
#+end_src
#+CAPTION: Αποδεκατισμένο σήμα από 500 \(kHz\) για σήμα του πεπιεσμένου αέρα για ταχύτητα 0 \(m/s\)
#+NAME: some_ref
#+RESULTS: some
|-----------------------+--------------------+--------+---------|
| Αριθμός δειγμάτων     | χωρίς αποδεκατισμό | ανά 10 | ανά 100 |
|-----------------------+--------------------+--------+---------|
| Συχνοτήτων (χ άξονας) |              32769 |   3277 |     328 |
| Ισχύος (ψ άξονας)     |              32769 |   3277 |     328 |

#+ATTR_LATEX: :placement [t] :center t :booktabs t :width \textwidth :align X[1lm]X[2lm]
#+NAME: rec_low_fs
#+begin_src jupyter-python :session python3 :async yes :results replace table :exports results
dummy(tablexyrec)
#+end_src
#+CAPTION: Καταγεγραμμένο σήμα του πεπιεσμένου αέρα για 0 \(m/s\) σε μικρότερες συχνότητες
#+NAME: rec_low_fs_ref
#+RESULTS: rec_low_fs
| Αριθμός δειγμάτων     | 50 \(kHz\) | 5 \(kHz\) |
|-----------------------+------------+-----------|
| Συχνοτήτων (χ άξονας) |       3277 |       328 |
| Ισχύος (ψ άξονας)     |       3277 |       328 |

#+ATTR_LATEX: :placement [t] :center t :booktabs t :width \textwidth :align X[1lm]X[2lm]
#+NAME: dec_fir
#+begin_src jupyter-python :session python3 :async yes :results replace table :exports results
dummy(tablexysign)
#+end_src
#+CAPTION: Αποδεκατισμός με φίλτρο κατά της αλλοίωσης τύπου \(F.I.R.\) για το ανωτέρω σήμα
#+NAME: dec_fir_ref
#+RESULTS: dec_fir
| Αριθμός δειγμάτων     | 5 \(kHz\) |
|-----------------------+-----------|
|-----------------------+-----------|
| Συχνοτήτων (χ άξονας) |       328 |
| Ισχύος (ψ άξονας)     |       328 |

Στον πίνακα [[dec_fir_ref]] η διαδικασία του αποδεκατισμού συνδυάστηκε με
την εφαρμογή φίλτρου κατά της αλλοίωσης, συμπεριλαμβανόμενη στην εντολή
του αποδεκατισμού. Η χρήση του εν' λόγω φίλτρου οδηγεί σε πολύ καλά αποτελέσματα,
όπως δείχνουν και τα διαγράμματα, [[fig:with_al]] και [[without_al]] καθώς απομοιώνουν
όσες συχνότητες αλλοιώνονται από την διαδικασία του αποδεκατισμού.

#+ATTR_LATEX: :placement [hb!]
#+NAME: dec_anti_aliased
#+begin_src jupyter-python :session python3 :async no :results replace table :exports results
#%%
from pros_noisefiltering.filters.fir import fir_factory_constructor

anti_aliased = signal.decimate(ca1_0.data, 100, ftype='fir')
anti_aliased_50 = signal.decimate(ca1_0.data, 10, ftype='fir')

butter_2000 = ca1_0.filter(fc_Hz=2000).data
butter_200 = ca1_0.filter(fc_Hz=200).data

# construct the fir filters with 2000 and 200 Hz cutoff
fir_2000 = fir_factory_constructor(fir_order=60, fc_Hz=2000)
fir_200 = fir_factory_constructor(fir_order=60, fc_Hz=200)

# apply fir filters
fir_filt_2000 = ca1_0.filter(fc_Hz=2_000, filter_func=fir_2000).data
fir_filt_200 = ca1_0.filter(fc_Hz=2_00, filter_func=fir_200).data

table_std = [["","\(\text{\selectlanguage{english}decimation}\)",""],
             None,
             ["\(\text{\selectlanguage{english}fs}\)",
              "\(\text{\selectlanguage{english}recorded at origin}\)",
              "\(\text{\selectlanguage{english}decimated with anti-aliasing}\)",],
             # ["<c>","<c>","<c>"],
             None,
             ["\(\text{\selectlanguage{english}5 kHz}\)", "{:.4f}".format(np.std(dec_5kHz.data)), "{:.4f}".format(np.std(anti_aliased))],
             ["\(\text{\selectlanguage{english}50 kHz}\)", "{:.4f}".format(np.std(dec_50kHz.data)), "{:.4f}".format(np.std(anti_aliased_50))],
             # SEPARATING_LINE,
             ["\(\text{\selectlanguage{english}500 kHz}\)", "{:.4f}".format(np.std(ca1_0.data)), "-"],
             None,
             ["", "\(\text{\selectlanguage{english}filtering operations}\)", "\(\text{\selectlanguage{english} in respect to cutoff frequency}\)"],
             None,
             ["\(\text{\selectlanguage{english}low-pass filter}\)",
              "\(\text{\selectlanguage{english}2 kHz}\)" ,
              "\(\text{\selectlanguage{english}200 Hz}\)"],
             None,
             ["\(\text{\selectlanguage{english}butterworth IIR}\)", "{:.4f}".format(np.std(butter_2000)), "{:.4f}".format(np.std(butter_200))],
             ["\(\text{\selectlanguage{english}simple FIR}\)", "{:.4f}".format(np.std(fir_filt_2000)), "{:.4f}".format(np.std(fir_filt_200))],
             ]

dummy(table_std)
#+end_src
#+CAPTION: Πίνακας τυπικής απόκλησης για το σήμα πεπιεσμένου αέρα με ταχύτητα 0 \(m/s\) αποδεκατισμένο με φίλτρο κατά της αλλοίωσης τύπου \(F.I.R.\).
#+NAME: dec_anti_aliased
#+RESULTS: dec_anti_aliased
|                                                    |                                                         | \(\text{\selectlanguage{english}decimation}\)                      |   |
|----------------------------------------------------+---------------------------------------------------------+--------------------------------------------------------------------+---|
| \(\text{\selectlanguage{english}fs}\)              |   \(\text{\selectlanguage{english}recorded at origin}\) | \(\text{\selectlanguage{english}decimated with anti-aliasing}\)    |   |
|----------------------------------------------------+---------------------------------------------------------+--------------------------------------------------------------------+---|
| \(\text{\selectlanguage{english}5 kHz}\)           |                                                  0.0350 | 0.0058                                                             |   |
| \(\text{\selectlanguage{english}50 kHz}\)          |                                                  0.0366 | 0.0105                                                             |   |
| \(\text{\selectlanguage{english}500 kHz}\)         |                                                  0.0364 | -                                                                  |   |
|----------------------------------------------------+---------------------------------------------------------+--------------------------------------------------------------------+---|
|                                                    | \(\text{\selectlanguage{english}filtering operations}\) | \(\text{\selectlanguage{english} in respect to cutoff frequency}\) |   |
|----------------------------------------------------+---------------------------------------------------------+--------------------------------------------------------------------+---|
| \(\text{\selectlanguage{english}low-pass filter}\) |                \(\text{\selectlanguage{english}2 kHz}\) | \(\text{\selectlanguage{english}200 Hz}\)                          |   |
|----------------------------------------------------+---------------------------------------------------------+--------------------------------------------------------------------+---|
| \(\text{\selectlanguage{english}butterworth IIR}\) |                                                  0.0035 | 0.0029                                                             |   |
| \(\text{\selectlanguage{english}simple FIR}\)      |                                                  0.0054 | 0.0054                                                             |   |
# \clearpage

Τέλος, στον πίνακα [[dec_anti_aliased]], παρατηρούμε πως η τυπική απόκλιση
του σήματος, παρουσιάζει σταθεροποίηση στην μέθοδο των \(FIR\) συστημάτων
ανεξαρτήτος της συχνότητας αποκοπής του. Είναι εύκολο να συμπεράνουμε πώς,
ο τύπος \(IIR\) είναι πίο ακριβής καθώς για την ίδια διαφορά στις συχνότητες
απόρριψης παρατηρείται περεταίρω μείωση του θορύβου. Αυτό συμβαίνει λόγω
της μεθόδου της αναδρομής που αναφέραμε στα θεωριτικά κεφάλαια. Μας δίνεται
λοιπόν η δυνατότητα να αφαιρούμε τις συχνότητες που καταστρέφουν το σήμα
με μεγαλύτερη ακρίβεια και επομένως να διαχωριστούν φάσματα που δεν απέχουν
πολύ μεταξύ τους.
*** plots for decimated signals from same origin :noexport:
#+begin_src jupyter-python :session python3 :async yes :results raw drawer :exports none


#%% [markdown]
# ## Comparing compressed air with other measurements with less sampling frequency
# comparing the signal
# when different filters are applied and averaging occurs
#

plot_spect_comb2([ca1_0.set_desc('500 kHz').calc_spectrum( nperseg=NPERSEG),
                  dec_50kHz.set_desc('50 kHz').calc_spectrum( nperseg=NPERSEG/10),
                  dec_5kHz.set_desc('5 kHz').calc_spectrum( nperseg=NPERSEG/100)
                  ],
                 title='Comparison of signals with different sampling rates',
                 xlim=[1e1,3.5e5], ylim = [1e-5,0.5e-2],
                 figsize = FIGSIZE
                 , draw_lines=True
                 )


#+end_src

#+RESULTS:
:results:
[[file:./.ob-jupyter/fa815193629efd9c9f7092187af14e799cdd1933.png]]
:end:
*** time histories :noexport:
#+begin_src jupyter-python :session python3 :async yes :results raw drawer :exports code
in1_0_av100 = ca1_0.average(100)
print(ca1_0.operations)
print(in1_0_av100.operations)
print(ca1_0.decimate(1).operations)
print(ca1_0.decimate(10).average(100).operations)
print(ca1_0.filter(fc_Hz=100).average(100).operations)
#+end_src

#+RESULTS:
:results:
: ['Loaded from tdms file Wind Measurement/Wind2, 500000.0000000014']
: ['Loaded from tdms file Wind Measurement/Wind2, 500000.0000000014', 'Apply Averaging :100']
: ['Loaded from tdms file Wind Measurement/Wind2, 500000.0000000014', 'Decimation factor:1, Offset:0, new fs_Hz:500000.0000000014']
: ['Loaded from tdms file Wind Measurement/Wind2, 500000.0000000014', 'Decimation factor:10, Offset:0, new fs_Hz:50000.00000000014', 'Apply Averaging :100']
: ['Loaded from tdms file Wind Measurement/Wind2, 500000.0000000014', 'pass filter 100', 'Apply Averaging :100']
:end:
* Συμπεράσματα
Όπως αναφέρθηκε αρκετές φορές και οι δύο κατηγορίες φίλτρων αποφέρουν αποδεκτά
αποτελέσματα. Η σύγκριση μπορεί να γίνει λοιπόν στην ταχύτητα
υπολογισμού των εξόδων όμως, αυτή *εξαρτάται ισχυρά* από την ποσότητα των
δειγμάτων του σήματος που επιθυμούμε να επεξεργαστούμε. Έτσι κυρίαρχο
ρόλο στην επιλογή του φίλτρου λαμβάνει η συχνότητα δειγματοληψίας (\(fs\)) και η
χρονική περίοδος που θα θέλαμε να αναλύσουμε. Ταυτόχρονα την \(fs\) καθορίζει
και το μέγιστο φάσμα συχνοτήτων σήματος που θέλουμε να καταγράψουμε, λόγω του
θεωρήματος της δειγματοληψίας. Επομένως είναι εύλογο να προσαρμόζεται η
επιλογή του φίλτρου σε σχέση με τον τύπο θορύβου (φάσμα συχνοτήτων)
που προσπαθούμε να απορρίψουμε, την συχνότητα δειγματοληψίας και την χρονική
περίοδο καταγραφής. Στην εγκατάσταση που εξετάστηκε, λόγω έντονων Η/Μ
παρεμβολών, παρουσιάστηκε ήπιος θόρυβος σε φάσμα άνω των \(3-5\ kHz\) με εμφανή
στοιχεία μετά τα \(12\ kHz\). Λόγω της μεγάλης διαφοράς των φασμάτων θορύβου και
επιθυμητού σήματος, μπορούμε να χρησιμοποιήσουμε χωρίς πρόβλημα φίλτρα τύπου
\(FIR\) για την απόρριψη του. Η τυπική απόκλιση της εξόδου και των δύο τύπων
διαφέρουν σε αμελητέο βαθμό για την διάρκεια των επτά (7) δευτερολέπτων, του
σήματος, που επεξεργάστηκαν.

Μια ακόμα κύρια παράμετρος για την επιλογή αποτέλεσε η ποιότητα του σήματος
εξόδου, καθώς και η ακρίβεια του φάσματος διέλευσης συχνοτήτων που
προορίζονταν για επεξεργασία. Καταλήξαμε πως η επιθυμητή τιμή της τυπικής
απόκλισης του σήματος εξόδου θα εμφανίζει πτώση κατά μια τάξη μεγέθους
τουλάχιστον, σχετικά με την είσοδο του σήματος. Παρατηρούμε στους πίνακες της
προηγούμενης ενότητας ότι, εμφανίζεται σημαντική πτώση της τυπικής απόκλισης
για ταχύτητες μέχρι 5 \((m/s)\) και όσο αυξάνεται η ταχύτητα του ανέμου η διαφορά
μειώνεται. Αυτό συμβαίνει λόγω της αύξησης της ισχύος του σήματος στις χαμηλές
συχνότητες. Όπως προαναφέρθηκε η πληροφορία της ταχύτητας του ανέμου παρέχεται
σε χαμηλές συχνότητες από το αισθητήριο όργανο με αποτέλεσμα να υπερκαλύπτεται
ο θόρυβος στις υψηλές ταχύτητες. Το συγκεκριμένο φαινόμενο μπορεί να
χρησιμοποιηθεί προς όφελος του ερευνητή, εφαρμόζοντας το ανάλογο
φίλτρο μόνο όταν καταγράφονται χαμηλές ταχύτητες ανέμου (ιδανικά \(0-10\ (m/s)\)).
Σε υψηλότερες ταχύτητες, εφαρμόζοντας την τεχνική του αποδεκατισμού σε συνδυασμό
με ένα φίλτρο κατά της αλλοίωσης, όπως παρουσιάστηκε στο κεφάλαιο
[[sec:decimation-chapter]], δύναται να επιτύχουμε όμοια αποτελέσματα αφού
μειώνοντας την συχνότητα καταγραφής, στην πράξη μειώνεται και το πλήθος των
δειγμάτων άρα και το φάσμα συχνοτήτων που περιέχει το αποδεκατισμένο σήμα.

Στην περίπτωση που απαιτείται λεπτομερή και αναλυτική απόρριψη φασμάτων
συχνοτήτων, προτείνεται ο συνδυασμός των δύο κατηγοριών φίλτρων. Αρχικά θα
πρέπει να εφαρμοστεί ο τύπος \(FIR\). Έτσι απομειώνεται μεγάλο μέρος του θορύβου
σε υψηλές συχνότητες, μετά τα \(5-8\ kHz\) επιλέγοντας την συχνότητα αποκοπής στα
2 \(kHz\), και στην συνέχεια με την εφαρμογή ενός \(IIR\) φίλτρου -λόγω μεγαλύτερης
ακρίβειας της δεύτερης κατηγορίας- να αποκτήσουμε πιο “καθαρό” σήμα τελικά στην
έξοδο. Συνδυάζοντας τις δύο κατηγορίες φίλτρων, αποφέρει μεν καλύτερα αποτελέσματα
όμως, αυξάνει σημαντικά τον χρόνο επεξεργασίας λόγος που συνιστάται μόνο σε
ειδικές περιπτώσεις ή/και μετά από σχετικές προϋποθέσεις του πειράματος.

Στόχος της παρούσας εργασίας ήταν ο πλήρης καθορισμός του θορύβου που
καταγράφηκε από τον αισθητήρα, η επιλογή κατάλληλου φίλτρου για την απόρριψη των
ανεπιθύμητων συχνοτήτων, όπως και η εύρεση της βέλτιστης μεθόδου ανάλογα την
εκάστοτε περίπτωση (ταχύτητα ανέμου, ποσότητα θορύβου, κ.α.). Για το μέλλον,
σημαντικές παράμετροι που δεν εξετάστηκαν πλήρως εδώ είναι η προέλευση καθώς και ο
καθορισμός της ισχύος και απόστασης της κάθε πηγής ηλεκτρομαγνητικών παρεμβολών
στον περιβάλλοντα χώρο. Μετά από υποθέσεις, καταλήξαμε πως υπάρχουν έτερες πηγές
Η/Μ κυμάτων που ενδέχεται να επηρεάζουν το καταγεγραμμένο σήμα. Εν κατακλείδι το
ποσό του θορύβου, ενώ ισχυρό, δεν καταστρέφει την πληροφορία της ταχύτητας του
ανέμου από το αισθητήριο όργανο και επομένως δεν υπάρχει ανάγκη εφαρμογής τεχνικών
επαναδημιουργίας του αρχικού σήματος και οι μέθοδοι του αποδεκατισμού και
φιλτραρίσματος κρίνονται επαρκείς.
\clearpage
* Βιβλιογραφία
#+bibliography: ./diss_bibliography.bib
\selectlanguage{english}
[cite/n:@vocoded67]
[cite/n:@SULAIMAN20223117]
[cite/n:@auto-fir-from-analog]
[cite/n:@iir-survey]
[cite/n:@SMITHall]
[cite/n:@LAIall]
[cite/n:@pitot-standards]
[cite/n:@Re-on-pitot]
[cite/n:@sigprocfirst]
[cite/n:@oppenheim99]
#+print_bibliography:
\selectlanguage{greek}
* GO BUTTONS :noexport:
# <(agenda)> file:~/org/agenda.org
# <(code)>
# <(diss-notes)>
# <(edit latex headers file)>
# <(apa citation file)>
# <(go to presentation)>
